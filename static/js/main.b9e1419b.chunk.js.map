{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/CharacterContainer.js","containers/BookContainer.js","containers/HouseContainer.js","components/characterStuff/CharacterDrillDown.js","components/houseStuff/SwornMemberList.js","components/houseStuff/HouseDrillDown.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","className","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","SELECT_CHARACTER","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","SELECT_HOUSE","FETCH_HOUSE_START","FETCH_HOUSE_SUCCESS","FETCH_HOUSE_FAILURE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","generateListKey","listName","listItem","concat","url","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","getCharacterNameOrAlias","rowInfo","original","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","tdProps","e","handleOriginal","selectCharacter","filterBooksAppearedIn","i","books","bookId","name","createBookList","bookUrl","componentDidMount","componentDidUpdate","_this2","this","domainContainerClassName","isDrillDownOpen","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","Cell","gender","type","onChange","checked","react_table_es","data","onPageSizeChange","showFilters","loading","fetchingCharacters","getTdProps","general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","target","reformatBookTitle","title","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","sorthMethod","date","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houseId","selectHouse","characterId","houses","house","forEach","fetchCharacter","sortMethod","region","show","resolveData","fetchingHouses","CharacterDrillDown","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","constructAliases","character","arr","push","inherits","createClass","align","born","died","SwornMemberList","members","member","HouseDrillDown","checkForAndFetchCharacters","overlord","fetchHouse","swornMembers","getLordFromCharacters","selectLord","selectOverlord","onMemberClick","console","log","isLordLoaded","words","coatOfArms","overlordName","houseStuff_SwornMemberList","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","selectedCharacter","selectedHouse","containers_CharacterContainer","containers_BookContainer","containers_HouseContainer","CharacterDrillDown_CharacterDrillDown","houseStuff_HouseDrillDown","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","fetch","queryString","fetchOne","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseFetch","houseSagas","houseSagas_marked","houseSagas_marked2","all","t1","t2","t3","houseSagas_marked3","rootReducer","combineReducers","objectSpread","newCharacters","newCharacter","newHouses","newHouse","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9e1419b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button className=\"\" onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",  \r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",  \r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\",\r\n  SELECT_CHARACTER: \"SELECT_CHARACTER\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n}\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\",\r\n  SELECT_HOUSE: \"SELECT_HOUSE\",\r\n  FETCH_HOUSE_START: \"FETCH_HOUSE\",\r\n  FETCH_HOUSE_SUCCESS: \"FETCH_HOUSE_SUCCESS\",\r\n  FETCH_HOUSE_FAILURE: \"FETCH_HOUSE_FAILURE\"\r\n}","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function generateListKey(listName, listItem) {\r\n  if (typeof listItem === 'string') {\r\n    return `${listName}-${listItem}`;\r\n  } else {\r\n    return `${listName}-${getIdFromUrlString(listItem.url)}`;\r\n  }\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter, getIdFromUrlString, generateListKey } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  getCharacterNameOrAlias = rowInfo => {\r\n    if(rowInfo.value)\r\n      return rowInfo.value;\r\n    return rowInfo.original.aliases[0]+\"*\";\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if (isStringEmpty(it.culture)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"characterName\") {\r\n          let id = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectCharacter({ id });\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  filterBooksAppearedIn = (filter, row) => {\r\n    for (let i = 0; i < row.books.length; i++) {\r\n      let bookId = getIdFromUrlString(row.books[i]);\r\n      if (this.props.books[bookId]) {\r\n        if (this.props.books[bookId].name.toLowerCase().includes(filter.value.toLowerCase()))\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createBookList = rowInfo => {\r\n    return rowInfo.row.books.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId => !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}</li>));\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Cell: name => (<span>{this.getCharacterNameOrAlias(name)}</span>)\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }, {\r\n      Header: \"Books Appeared In\",\r\n      accessor: \"books\",\r\n      Cell: books => (<span><ul className='in-table-list'>{this.createBookList(books)}</ul></span>),\r\n      filterable: true,\r\n      filterMethod: this.filterBooksAppearedIn\r\n    }]\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={filteredCharacters}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            showFilters={true}\r\n            loading={this.props.fetchingCharacters}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className=\"api-button\">\r\n          <CallApiButton\r\n            onClick={this.getMoreCharacters}\r\n            buttonName={\"Get More Characters\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching,\r\n    books: state.books.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  }\r\n\r\n  updateFilter = e => {\r\n    this.setState({ bookFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = (apiDate) => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: (title => <span className='book-title'>{this.reformatBookTitle(title.value)}</span>),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: 'released',\r\n        Cell: (date => <span className='book release-date'>{this.convertApiDateToFriendlyDate(date.value)}</span>),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.books)}\r\n            columns={columns}\r\n            loading={this.props.fetchingBooks}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            pageSizeOptions={[5, 10, 15]}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: ''\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 20\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if(column.id === \"name\"){\r\n          let houseId = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectHouse({id: houseId});\r\n        } else if (column.id === \"lordName\"){\r\n          if(rowInfo.row.lordName){            \r\n            let characterId = getIdFromUrlString(rowInfo.row.currentLord);\r\n            this.props.selectCharacter({id: characterId})\r\n          }          \r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort,\r\n      Cell: region => (<span>{region.value ? region.value : 'Region unknown'}</span>)\r\n    }, {\r\n      Header: \"Current Lord Id\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: lordName => (<span>{lordName.value ? lordName.value : \"Name unknown\"}</span>),\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.houses)}\r\n            resolveData={data => data.map(this.resolveHouseData)}\r\n            columns={columns}\r\n            loading={this.props.fetchingHouses}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className='api-button'>\r\n          <CallApiButton\r\n            onClick={this.getMoreHouses}\r\n            buttonName={\"Get More Houses\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({ id: getIdFromUrlString(house.currentLord) }));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    selectHouse: payload => dispatch({type: houseActions.SELECT_HOUSE, payload}),\r\n    selectCharacter: payload => dispatch({type: characterActions.SELECT_CHARACTER, payload})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from \"react\";\r\nimport { generateListKey } from \"../../utils/utils\";\r\n\r\nexport class CharacterDrillDown extends Component {\r\n\r\n  constructAliases = () => {\r\n    let aliases = this.props.character.aliases;\r\n    let i = this.props.character.name ? 0 : 1;\r\n    let arr = [];\r\n    for(i; i < aliases.length; i++){\r\n      arr.push(<li className=\"unclickable\" key={generateListKey(\"alias-list\", aliases[i])}>{aliases[i]}</li>)\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    const name = this.props.character.name\r\n      ? this.props.character.name\r\n      : this.props.character.aliases[0] + \"*\";\r\n    const culture = this.props.character.culture\r\n      ? this.props.character.culture\r\n      : \"\";\r\n      const aliases = this.constructAliases();\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <div className=\"character-title\">\r\n          <h3 className=\"character-name\" align=\"center\">\r\n            {name}\r\n          </h3>\r\n          <h4 align='center'>\r\n            {culture} {this.props.character.gender} {culture ? '' : \"from unknwon\"}\r\n          </h4>\r\n        </div>\r\n        <div className='character-info'>\r\n          <p>Born: {this.props.character.born ? this.props.character.born : 'unknwon'}</p>\r\n          <p>Died: {this.props.character.died ? this.props.character.died : 'alive or unknown'} </p>\r\n          {!!aliases.length ? this.props.character.name ? \"Aliases: \" : \"Other Aliases: \" : ''}\r\n          <ul>\r\n            {aliases}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { generateListKey, getIdFromUrlString } from '../../utils/utils';\r\n\r\nconst SwornMemberList = props => {\r\n  const listName = 'sworn-member'\r\n  const members = props.members.map(member => {\r\n    const clickable = props.characters[getIdFromUrlString(member.url)];\r\n    const className = clickable ? \"clickable\" : \"unclickable\";\r\n    return (<li className={className} key={generateListKey(listName, member)}>{member.name ? member.name : (member.aliases[0] + \"*\")}</li>)\r\n});\r\n  return (\r\n    <ul>\r\n      {members}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SwornMemberList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIdFromUrlString } from \"../../utils/utils\";\r\nimport { houseActions, characterActions } from \"../../constants/constants\";\r\nimport SwornMemberList from \"./SwornMemberList\";\r\n\r\nexport class HouseDrillDown extends Component {\r\n  checkForAndFetchCharacters = () => {\r\n    const overlord = getIdFromUrlString(this.props.house.overlord);\r\n    if (overlord && !this.props.houses[overlord]) {\r\n      this.props.fetchHouse({\r\n        id: getIdFromUrlString(this.props.house.overlord)\r\n      });\r\n    }\r\n    this.props.house.swornMembers.forEach(member => {\r\n      const id = getIdFromUrlString(member);\r\n      if (!this.props.characters[id]) {\r\n        this.props.fetchCharacter({ id });\r\n      }\r\n    });\r\n  };\r\n\r\n  getLordFromCharacters = () => {\r\n    return this.props.characters[\r\n      getIdFromUrlString(this.props.house.currentLord)\r\n    ];\r\n  };\r\n\r\n  selectLord = () => {\r\n    if (this.getLordFromCharacters()) {\r\n      const id = getIdFromUrlString(this.getLordFromCharacters().url);\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  selectOverlord = () => {\r\n    if (this.props.house.overlord) {\r\n      const id = getIdFromUrlString(this.props.house.overlord);\r\n      if (this.props.houses[id]) {\r\n        this.props.selectHouse({ id });\r\n      }\r\n    }\r\n  };\r\n\r\n  onMemberClick = member => {\r\n    console.log(\"Selected: \", member);\r\n  };\r\n\r\n  isLordLoaded = () => {\r\n    return this.props.currentLord && this.getLordFromCharacters();\r\n  };\r\n\r\n  render() {\r\n    const words = this.props.house.words\r\n      ? '\"' + this.props.house.words + '\"'\r\n      : \"\";\r\n    const lordName = this.isLordLoaded()\r\n      ? this.getLordFromCharacters().name\r\n      : \"unknown\";\r\n    const coatOfArms = this.props.house.coatOfArms\r\n      ? this.props.house.coatOfArms\r\n      : \"unknown\";\r\n    const overlord = this.props.house.overlord\r\n      ? this.props.houses[getIdFromUrlString(this.props.house.overlord)]\r\n      : \"\";\r\n    let overlordName = \"unknown\";\r\n    if (overlord) {\r\n      overlordName = overlord.name;\r\n    }\r\n    const members = this.props.house.swornMembers\r\n      .map(member => getIdFromUrlString(member))\r\n      .filter(id => !!this.props.characters[id])\r\n      .map(id => this.props.characters[id]);\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <div className=\"house-title\">\r\n          <h3 className=\"house-name\" align=\"center\">\r\n            {this.props.house.name}\r\n          </h3>\r\n          <h4 className=\"house-words\" align=\"center\">\r\n            {words}\r\n          </h4>\r\n        </div>\r\n        <div className=\"house-info\">\r\n          <p onClick={this.selectLord}>Current Lord: {lordName}</p>\r\n          <p>Coat of Arms: {coatOfArms}</p>\r\n          <p onClick={this.selectOverlord}>Overlord: {overlordName}</p>\r\n        </div>\r\n        Sworn Members:\r\n        {this.props.house.swornMembers.length ? (\r\n          <SwornMemberList\r\n            onMemberClick={this.onMemberClick}\r\n            members={members}\r\n            characters={this.props.characters}\r\n          />\r\n        ) : (\r\n          \" None\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    houses: state.houses.list\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouse: payload =>\r\n      dispatch({ type: houseActions.FETCH_HOUSE_START, payload }),\r\n    selectCharacter: payload =>\r\n      dispatch({ type: characterActions.SELECT_CHARACTER, payload }),\r\n    selectHouse: payload =>\r\n      dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    fetchCharacter: payload =>\r\n      dispatch({ type: characterActions.FETCH_CHARACTER_START, payload })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseDrillDown);\r\n","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/CharacterContainer'\r\nimport BookContainer from './containers/BookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport './App.css';\r\nimport HouseContainer from './containers/HouseContainer';\r\nimport { CharacterDrillDown } from './components/characterStuff/CharacterDrillDown';\r\nimport HouseDrillDown from './components/houseStuff/HouseDrillDown';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: true,\r\n    viewHouses: false\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch (e.target.value) {\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ viewBooks, viewCharacters, viewHouses });\r\n  }\r\n\r\n  render() {\r\n    const isDrillDownOpen = this.props.selectedCharacter || this.props.selectedHouse;    \r\n    return (\r\n      <div className=\"git-app\">\r\n        <div id=\"domain-selector\" align='center'>\r\n          <span>\r\n            <button value='books' onClick={this.changeView} className=\"view-selector-button\">View Books</button>\r\n          </span>\r\n          <span>\r\n            <button value='characters' onClick={this.changeView} className='view-selector-button'>View Characters</button>\r\n          </span>\r\n          <span>\r\n            <button value='houses' onClick={this.changeView} className='view-selector-button'>View Houses</button>\r\n          </span>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewBooks ? (<BookContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.props.selectedCharacter ? (<CharacterDrillDown character={this.props.selectedCharacter} />) : ''}\r\n        {this.props.selectedHouse ? (<HouseDrillDown house={this.props.selectedHouse} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  componentDidUpdate = () => {    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCharacter: state.characters.selectedCharacter,\r\n    selectedHouse: state.houses.selectedHouse\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions, houseActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedCharacter: null\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.forEach(it => newCharacters[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newCharacters }, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return { ...state, error: null };\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      let newCharacter = {};\r\n      newCharacter[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newCharacter } };\r\n    case characterActions.FETCH_CHARACTER_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error }\r\n    case characterActions.SELECT_CHARACTER:\r\n      let selectedCharacter = state.list[action.payload.id];\r\n      return { ...state, selectedCharacter };\r\n    case houseActions.SELECT_HOUSE:\r\n      return { ...state, selectedCharacter: null };\r\n    default:\r\n      // console.log(\"Failed to match action: \" + action.type + \" from characterReducer\");\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      return { ...state, fetching: false, list: action.data.data };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function() {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions, characterActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedHouse: null\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n      let newHouses = {};\r\n      action.data.data.forEach(it => newHouses[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newHouses }, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case houseActions.FETCH_HOUSE_START:\r\n      return { ...state, error: null };\r\n    case houseActions.FETCH_HOUSE_SUCCESS:\r\n      let newHouse = {};\r\n      newHouse[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newHouse } };\r\n    case houseActions.FETCH_HOUSE_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error };\r\n    case houseActions.SELECT_HOUSE:\r\n      let selectedHouse = state.list[action.payload.id];\r\n      return { ...state, selectedHouse };\r\n    case characterActions.SELECT_CHARACTER:\r\n      return { ...state, selectedHouse: null };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try {\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: houseActions.HOUSES_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* houseFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().houses.fetchOne, action.payload);\r\n    yield put({type: houseActions.FETCH_HOUSE_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: houseActions.FETCH_HOUSE_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* houseSagas() {\r\n  yield all([\r\n    yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses),\r\n    yield takeEvery(houseActions.FETCH_HOUSE_START, houseFetch)\r\n  ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}