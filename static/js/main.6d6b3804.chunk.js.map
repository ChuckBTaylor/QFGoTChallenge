{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/CharacterContainer.js","containers/BookContainer.js","containers/HouseContainer.js","components/drillDown/CharacterDrillDown.js","components/drillDown/HouseDrillDown.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","className","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","SELECT_CHARACTER","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","SELECT_HOUSE","FETCH_HOUSE_START","FETCH_HOUSE_SUCCESS","FETCH_HOUSE_FAILURE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","characterValidator","character","name","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","tdProps","rowInfo","e","handleOriginal","original","url","selectCharacter","componentDidMount","componentDidUpdate","_this2","this","domainContainerClassName","isDrillDownOpen","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","gender","Cell","type","onChange","checked","react_table_es","data","resolveData","onPageSizeChange","showFilters","loading","fetchingCharacters","getTdProps","general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","target","reformatBookTitle","title","concat","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","sorthMethod","date","books","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houseId","selectHouse","characterId","houses","house","forEach","fetchCharacter","sortMethod","region","show","fetchingHouses","CharacterDrillDown","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","HouseDrillDown","_getPrototypeOf2","_len","args","Array","_key","call","checkForAndFetchOverlord","overlord","fetchHouse","words","coatOfArms","overlordName","align","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","selectedCharacter","selectedHouse","containers_CharacterContainer","containers_BookContainer","containers_HouseContainer","CharacterDrillDown_CharacterDrillDown","drillDown_HouseDrillDown","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","fetch","queryString","fetchOne","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseFetch","houseSagas","houseSagas_marked","houseSagas_marked2","all","t1","t2","t3","houseSagas_marked3","rootReducer","combineReducers","objectSpread","newCharacters","console","log","newCharacter","newHouses","newHouse","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d6b3804.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button className=\"\" onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",  \r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",  \r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\",\r\n  SELECT_CHARACTER: \"SELECT_CHARACTER\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n}\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\",\r\n  SELECT_HOUSE: \"SELECT_HOUSE\",\r\n  FETCH_HOUSE_START: \"FETCH_HOUSE\",\r\n  FETCH_HOUSE_SUCCESS: \"FETCH_HOUSE_SUCCESS\",\r\n  FETCH_HOUSE_FAILURE: \"FETCH_HOUSE_FAILURE\"\r\n}","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter, getIdFromUrlString } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  characterValidator = character => {\r\n    character.name = isStringEmpty(character.name) ? (character.aliases[0] + \"*\") : character.name;\r\n    return character;\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if (isStringEmpty(it.culture)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"characterName\") {\r\n          let id = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectCharacter({ id });\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }]\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={filteredCharacters}\r\n            columns={columns}\r\n            resolveData={data => data.map(row => this.characterValidator(row))}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            showFilters={true}\r\n            loading={this.props.fetchingCharacters}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className=\"api-button\">\r\n          <CallApiButton\r\n            onClick={this.getMoreCharacters}\r\n            buttonName={\"Get More Characters\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  }\r\n\r\n  updateFilter = e => {\r\n    this.setState({ bookFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = (apiDate) => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: (title => <span className='book-title'>{this.reformatBookTitle(title.value)}</span>),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: 'released',\r\n        Cell: (date => <span className='book release-date'>{this.convertApiDateToFriendlyDate(date.value)}</span>),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.books)}\r\n            columns={columns}\r\n            loading={this.props.fetchingBooks}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            pageSizeOptions={[5, 10, 15]}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: ''\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 20\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if(column.id === \"name\"){\r\n          let houseId = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectHouse({id: houseId});\r\n        } else if (column.id === \"lordName\"){\r\n          if(rowInfo.row.lordName){            \r\n            let characterId = getIdFromUrlString(rowInfo.row.currentLord);\r\n            this.props.selectCharacter({id: characterId})\r\n          }          \r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort,\r\n      Cell: region => (<span>{region.value ? region.value : 'Region unknown'}</span>)\r\n    }, {\r\n      Header: \"Current Lord Id\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: lordName => (<span>{lordName.value ? lordName.value : \"Name unknown\"}</span>),\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.houses)}\r\n            resolveData={data => data.map(this.resolveHouseData)}\r\n            columns={columns}\r\n            loading={this.props.fetchingHouses}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className='api-button'>\r\n          <CallApiButton\r\n            onClick={this.getMoreHouses}\r\n            buttonName={\"Get More Houses\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({ id: getIdFromUrlString(house.currentLord) }));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    selectHouse: payload => dispatch({type: houseActions.SELECT_HOUSE, payload}),\r\n    selectCharacter: payload => dispatch({type: characterActions.SELECT_CHARACTER, payload})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from 'react';\r\n\r\nexport class CharacterDrillDown extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"drill-down\">Character</div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getIdFromUrlString } from '../../utils/utils';\r\nimport { houseActions } from '../../constants/constants';\r\n\r\nexport class HouseDrillDown extends Component {\r\n\r\n  checkForAndFetchOverlord = () => {\r\n    const overlord = getIdFromUrlString(this.props.house.overlord);\r\n    if(overlord && !this.props.houses[overlord]){      \r\n      this.props.fetchHouse({id: getIdFromUrlString(this.props.house.overlord)});\r\n    }\r\n  }\r\n  render() {\r\n    const words = this.props.house.words ? (\"\\\"\" + this.props.house.words + \"\\\"\") : '';\r\n    const lordName = this.props.house.currentLord ? this.props.characters[getIdFromUrlString(this.props.house.currentLord)].name : \"unknown\";\r\n    const coatOfArms = this.props.house.coatOfArms ? this.props.house.coatOfArms : \"unknown\";\r\n    const overlord = this.props.house.overlord ? this.props.houses[getIdFromUrlString(this.props.house.overlord)] : '';\r\n    let overlordName = 'unknown';\r\n    if (overlord) {\r\n      overlordName = overlord.name;\r\n    }\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <div className=\"house-title\">\r\n          <h3 className=\"house-name\" align='center'>{this.props.house.name}</h3>\r\n          <h4 className=\"house-words\" align='center'>{words}</h4>\r\n        </div>\r\n        <div className=\"houseInfo\">\r\n          <p>Current Lord: {lordName}</p>\r\n          <p>Coat of Arms: {coatOfArms}</p>\r\n          <p>Overlord: {overlordName}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.checkForAndFetchOverlord()\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    this.checkForAndFetchOverlord()\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    houses: state.houses.list\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouse: payload => dispatch({type: houseActions.FETCH_HOUSE_START, payload})\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HouseDrillDown);","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/CharacterContainer'\r\nimport BookContainer from './containers/BookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport './App.css';\r\nimport HouseContainer from './containers/HouseContainer';\r\nimport { CharacterDrillDown } from './components/drillDown/CharacterDrillDown';\r\nimport HouseDrillDown from './components/drillDown/HouseDrillDown';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: false,\r\n    viewHouses: true\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch (e.target.value) {\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ viewBooks, viewCharacters, viewHouses });\r\n  }\r\n\r\n  render() {\r\n    const isDrillDownOpen = this.props.selectedCharacter || this.props.selectedHouse;    \r\n    return (\r\n      <div className=\"git-app\">\r\n        <div id=\"domain-selector\" align='center'>\r\n          <span>\r\n            <button value='books' onClick={this.changeView} className=\"view-selector-button\">View Books</button>\r\n          </span>\r\n          <span>\r\n            <button value='characters' onClick={this.changeView} className='view-selector-button'>View Characters</button>\r\n          </span>\r\n          <span>\r\n            <button value='houses' onClick={this.changeView} className='view-selector-button'>View Houses</button>\r\n          </span>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewBooks ? (<BookContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.props.selectedCharacter ? (<CharacterDrillDown character={this.props.selectedCharacter} />) : ''}\r\n        {this.props.selectedHouse ? (<HouseDrillDown house={this.props.selectedHouse} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  componentDidUpdate = () => {    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCharacter: state.characters.selectedCharacter,\r\n    selectedHouse: state.houses.selectedHouse\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions, houseActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedCharacter: null\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.forEach(it => newCharacters[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newCharacters }, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return { ...state, error: null };\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      let newCharacter = {};\r\n      newCharacter[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newCharacter } };\r\n    case characterActions.FETCH_CHARACTER_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error }\r\n    case characterActions.SELECT_CHARACTER:\r\n      let selectedCharacter = state.list[action.payload.id];\r\n      return { ...state, selectedCharacter };\r\n    case houseActions.SELECT_HOUSE:\r\n      return { ...state, selectedCharacter: null };\r\n    default:\r\n      // console.log(\"Failed to match action: \" + action.type + \" from characterReducer\");\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      return { ...state, fetching: false, list: action.data.data };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function() {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions, characterActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedHouse: null\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n      let newHouses = {};\r\n      action.data.data.forEach(it => newHouses[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newHouses }, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case houseActions.FETCH_HOUSE_START:\r\n      return { ...state, error: null };\r\n    case houseActions.FETCH_HOUSE_SUCCESS:\r\n      let newHouse = {};\r\n      newHouse[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newHouse } };\r\n    case houseActions.FETCH_HOUSE_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error };\r\n    case houseActions.SELECT_HOUSE:\r\n      let selectedHouse = state.list[action.payload.id];\r\n      return { ...state, selectedHouse };\r\n    case characterActions.SELECT_CHARACTER:\r\n      return { ...state, selectedHouse: null };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try {\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: houseActions.HOUSES_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* houseFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().houses.fetchOne, action.payload);\r\n    yield put({type: houseActions.FETCH_HOUSE_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: houseActions.FETCH_HOUSE_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* houseSagas() {\r\n  yield all([\r\n    yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses),\r\n    yield takeEvery(houseActions.FETCH_HOUSE_START, houseFetch)\r\n  ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}