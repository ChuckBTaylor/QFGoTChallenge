{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/characterContainer.js","containers/bookContainer.js","containers/houseContainer.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","characterValidator","character","name","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","componentDidMount","componentDidUpdate","_this2","this","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","gender","Cell","type","onChange","checked","react_table_es","data","resolveData","onPageSizeChange","showFilters","loading","fetchingCharacters","general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","e","target","reformatBookTitle","title","concat","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","className","sorthMethod","date","books","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houses","house","forEach","fetchCharacter","sortMethod","show","fetchingHouses","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","align","characterContainer","bookContainer","houseContainer","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","url","fetch","queryString","fetchOne","console","log","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseSagas","houseSagas_marked","houseSagas_marked2","rootReducer","combineReducers","arguments","objectSpread","newCharacters","newCharacter","newHouses","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iNAeeA,EAbO,SAAAC,GAMpB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,QANU,WAClBJ,EAAMI,YAMHJ,EAAMK,qBCVAC,EAAmB,CAC9BC,uBAAwB,yBACxBC,yBAA0B,0BAC1BC,yBAA0B,2BAC1BC,sBAAuB,wBACvBC,wBAAyB,0BACzBC,wBAAyB,2BAGdC,EAAc,CACzBC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,oBAAqB,uBAGVC,EAAe,CAC1BC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,qBAAsB,gCClBjB,SAASC,EAAcC,GAC5B,OAAW,MAAPA,GACe,IAAfA,EAAIC,OAIH,SAASC,EAA4BF,GAC1C,OAAOG,OAAOC,KAAKJ,GAAKK,OAAO,SAAAC,GAAG,MAAY,OAARA,IAAcC,IAAI,SAAAD,GAAG,OAAIA,EAAM,IAAMN,EAAIM,KAAME,KAAK,KAGrF,SAASC,EAAcC,GAC5B,YAAgBC,IAARD,GAA6B,OAARA,GAAwB,KAARA,EAGxC,SAASE,EAAmBF,GACjC,IAAIG,EAAWH,EAAII,MAAM,KACzB,OAAQD,EAASA,EAASZ,OAAS,GAG9B,SAASc,EAAaV,EAAQW,EAAKC,GACxC,QAAKD,EAAIC,EAAOC,KAETF,EAAIC,EAAOC,IAAIC,cAAcC,SAASf,EAAOgB,MAAMF,eAGrD,SAASG,EAAW1C,EAAG2C,EAAGC,GAiB/B,OAfAD,EAAU,OAANA,QAAoBZ,IAANY,GAAmBE,IAAWF,EAC/B,kBAFjB3C,EAAU,OAANA,QAAoB+B,IAAN/B,GAAmB6C,IAAW7C,MAG9CA,EAAIA,EAAEuC,eACAO,WAAW,QACf9C,EAAIA,EAAE+C,MAAM,GACL/C,EAAE8C,WAAW,QACpB9C,EAAIA,EAAE+C,MAAM,KAEC,kBAANJ,KACTA,EAAIA,EAAEJ,eACAO,WAAW,QACfH,EAAIA,EAAEI,MAAM,GACLJ,EAAEG,WAAW,QACpBH,EAAIA,EAAEI,MAAM,KAEZ/C,EAAI2C,EACC,EAEL3C,EAAI2C,GACE,EAEH,MCzCHK,6MACJC,MAAQ,CACNC,SAAU,GACVC,sBAAsB,KAGxBC,kBAAoB,WAClBC,EAAKvD,MAAMwD,gBAAgB,CAAEC,MAAQF,EAAKvD,MAAM0D,kBAAoB,OAGtEC,mBAAqB,SAAAC,GAEnB,OADAA,EAAUC,KAAO9B,EAAc6B,EAAUC,MAASD,EAAUE,QAAQ,GAAK,IAAOF,EAAUC,KACnFD,KAGTG,oBAAsB,WACpBR,EAAKS,SAAS,CAAEX,sBAAuBE,EAAKJ,MAAME,0BAGpDY,eAAiB,SAAAb,GACfG,EAAKS,SAAS,CAAEZ,gBAGlBc,yBAA2B,SAAAC,GACzB,OAAKZ,EAAKJ,MAAME,uBAEbtB,EAAcoC,EAAGC,YA+CtBC,kBAAoB,WACdd,EAAKvD,MAAM0D,kBAAoB,GACjCH,EAAKvD,MAAMwD,gBAAgB,CAAEC,KAAM,OAGvCa,mBAAqB,qFA9CZ,IAAAC,EAAAC,KACDC,EAAqBhD,OAAOiD,OAAOF,KAAKxE,MAAM2E,YAAYhD,OAAO,SAAAwC,GAAE,OAAII,EAAKL,yBAAyBC,KACrGS,EAAU,CAAC,CACfC,OAAQ,OACRC,SAAU,OACVtC,GAAI,gBACJuC,OAAQ,SACRC,YAAY,EACZC,aAAc5C,GACb,CACDwC,OAAQ,SACRC,SAAU,SACVE,YAAY,EACZC,aAAc,SAACtD,EAAQW,GAAT,OAAiBA,EAAI4C,OAAOzC,cAAcO,WAAWrB,EAAOgB,MAAMF,iBAC/E,CACDoC,OAAQ,UACRC,SAAU,UACVtC,GAAI,UACJ2C,KAAO,SAAAf,GAAO,OAAInE,EAAAC,EAAAC,cAAA,YAAQ4B,EAAcqC,EAAQzB,OAAyB,UAAhByB,EAAQzB,QACjEqC,YAAY,EACZC,aAAc5C,EACd0C,OAAQ9E,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,SAAOiF,KAAK,WAAWC,SAAUb,KAAKT,oBAAqBuB,QAASd,KAAKrB,MAAME,0BAE/G,OACEpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,KAAMf,EACNG,QAASA,EACTa,YAAa,SAAAD,GAAI,OAAIA,EAAK3D,IAAI,SAAAS,GAAG,OAAIiC,EAAKZ,mBAAmBrB,MAC7Dc,SAAUoB,KAAKrB,MAAMC,SACrBsC,iBAAkBlB,KAAKP,eACvB0B,aAAa,EACbC,QAASpB,KAAKxE,MAAM6F,qBAEtB5F,EAAAC,EAAAC,cAAC2F,EAAD,CACE1F,QAASoE,KAAKlB,kBACdjD,WAAY,gCApEW0F,aAiGlBC,cAfS,SAAA7C,GACtB,MAAO,CACLwB,WAAYxB,EAAMwB,WAAWsB,KAC7BvC,kBAAmBP,EAAMwB,WAAWjB,kBACpCmC,mBAAoB1C,EAAMwB,WAAWuB,WAId,SAAAC,GACzB,MAAO,CACL3C,gBAAiB,SAAA4C,GAAO,OACtBD,EAAS,CAAEf,KAAM9E,EAAiBC,uBAAwB6F,eAIjDJ,CAGb9C,GCpGImD,oNAEJlD,MAAQ,CACNmD,WAAY,GACZlD,SAAU,MAGZmD,aAAe,SAAAC,GACbjD,EAAKS,SAAS,CAACsC,WAAYE,EAAEC,OAAO9D,WAGtCsB,eAAiB,SAAAb,GACfG,EAAKS,SAAS,CAACZ,gBAGjBsD,kBAAoB,SAAAC,GAClB,OAAIA,EAAM3D,WAAW,OACZ2D,EAAM1D,MAAM,GAAG2D,OAAO,SACpBD,EAAM3D,WAAW,KACnB2D,EAAM1D,MAAM,GAAG2D,OAAO,OAExBD,KAGTE,6BAA+B,SAACC,GAE9B,OADW,IAAIC,KAAKD,GACRE,8FAGL,IAAAzC,EAAAC,KACDI,EAAU,CACd,CACEC,OAAQ,QACRC,SAAU,OACVmC,YAAY,EACZzE,GAAI,YACJ2C,KAAO,SAAAwB,GAAK,OAAI1G,EAAAC,EAAAC,cAAA,QAAM+G,UAAU,cAAc3C,EAAKmC,kBAAkBC,EAAMhE,SAC3EsC,aAAc5C,EACd8E,YAAavE,GAEf,CACEiC,OAAQ,kBACRC,SAAU,gBACVtC,GAAI,gBACJwC,YAAY,GAEd,CACEH,OAAQ,eACRC,SAAU,WACVK,KAAO,SAAAiC,GAAI,OAAInH,EAAAC,EAAAC,cAAA,QAAM+G,UAAU,qBAAqB3C,EAAKsC,6BAA6BO,EAAKzE,SAC3FqC,YAAY,IAGhB,OACE/E,EAAAC,EAAAC,cAAA,OAAK+G,UAAU,kBACbjH,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,KAAM/D,OAAOiD,OAAOF,KAAKxE,MAAMqH,OAC/BzC,QAASA,EACTgB,QAASpB,KAAKxE,MAAMsH,cACpB3B,aAAa,EACbX,YAAY,EACZ5B,SAAUoB,KAAKrB,MAAMC,SACrBsC,iBAAkBlB,KAAKP,eACvBsD,gBAAiB,CAAC,EAAG,GAAI,mDAM/B/C,KAAKR,SAAS,CACZsC,WAAY,YAtEUP,cAuFbC,cAbS,SAAA7C,GACtB,MAAO,CACLkE,MAAOlE,EAAMkE,MAAMpB,KACnBqB,cAAenE,EAAMkE,MAAMnB,WAIJ,SAAAC,GACzB,MAAO,CACLqB,WAAY,kBAAMrB,EAAS,CAAEf,KAAMvE,EAAYC,uBAIpCkF,CAGbK,GCzFIoB,6MAEJtE,MAAQ,CACNuE,YAAa,GACbtE,SAAU,MAGZuE,cAAgB,WACdpE,EAAKvD,MAAM4H,YAAY,CAAEnE,MAAQF,EAAKvD,MAAM0D,kBAAoB,OAGlE6C,aAAe,SAAAC,GACbjD,EAAKS,SAAS,CAAE0D,YAAalB,EAAEC,OAAO9D,WAGxCsB,eAAiB,SAAAb,GACfG,EAAKS,SAAS,CAAEZ,gBAGlByE,mBAAqB,SAAAlB,GACnB,OAAIA,EAAM3D,WAAW,OACZ2D,EAAM1D,MAAM,GAAG2D,OAAO,SACpBD,EAAM3D,WAAW,KACnB2D,EAAM1D,MAAM,GAAG2D,OAAO,OAExBD,KAGTE,6BAA+B,SAAAC,GAE7B,OADW,IAAIC,KAAKD,GACRE,wBAGdc,iBAAmB,SAAAC,GACjB,IAAIC,EAAS9F,EAAmB6F,EAAUE,aAG1C,OAFI1E,EAAKvD,MAAM2E,WAAWqD,KACxBD,EAAUG,SAAW3E,EAAKvD,MAAM2E,WAAWqD,GAAQnE,MAC9CkE,KA4CT1D,kBAAoB,WACdd,EAAKvD,MAAM0D,kBAAoB,GACjCH,EAAKvD,MAAM4H,YAAY,CAAEnE,KAAM,OAGnCa,mBAAqB,WACnB7C,OAAOiD,OAAOnB,EAAKvD,MAAMmI,QAAQxG,OAAO,SAAAyG,GAAK,OAAIA,EAAMH,cAAgBG,EAAMF,WAAUG,QAAQ,SAAAD,GAAK,OAAI7E,EAAKvD,MAAMsI,eAAe,CAAC9F,GAAIN,EAAmBkG,EAAMH,0FA/CzJ,IAAA1D,EAAAC,KACDI,EAAU,CAAC,CACfC,OAAQ,OACRC,SAAU,OACVG,aAAc5C,GACb,CACDwC,OAAQ,SACRC,SAAU,SACVG,aAAc5C,EACdkG,WAAY3F,GACX,CACDiC,OAAQ,oBACRC,SAAU,cACVE,YAAY,EACZwD,MAAM,GACL,CACD3D,OAAQ,eACRC,SAAU,WACVE,YAAY,EACZG,KAAM,SAAA+C,GAAQ,OAAKjI,EAAAC,EAAAC,cAAA,YAAO+H,EAASvF,MAAQuF,EAASvF,MAAQ,iBAC5DsC,aAAc5C,IAEhB,OACEpC,EAAAC,EAAAC,cAAA,OAAK+G,UAAU,mBACbjH,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,KAAM/D,OAAOiD,OAAOF,KAAKxE,MAAMmI,QAC/B1C,YAAa,SAAAD,GAAI,OAAIA,EAAK3D,IAAI0C,EAAKuD,mBACnClD,QAASA,EACTgB,QAASpB,KAAKxE,MAAMyI,eACpB9C,aAAa,EACbX,YAAY,EACZ5B,SAAUoB,KAAKrB,MAAMC,SACrBsC,iBAAkBlB,KAAKP,iBAEzBhE,EAAAC,EAAAC,cAAC2F,EAAD,CACE1F,QAASoE,KAAKmD,cACdtH,WAAY,4BA5EO0F,aA0GdC,cAhBS,SAAA7C,GACtB,MAAO,CACLgF,OAAQhF,EAAMgF,OAAOlC,KACrBvC,kBAAmBP,EAAMgF,OAAOzE,kBAChC+E,eAAgBtF,EAAMgF,OAAOjC,SAC7BvB,WAAYxB,EAAMwB,WAAWsB,OAIN,SAAAE,GACzB,MAAO,CACLyB,YAAa,SAAAxB,GAAO,OAAID,EAAS,CAAEf,KAAMnE,EAAaC,mBAAoBkF,aAC1EkC,eAAgB,SAAAlC,GAAO,OAAID,EAAS,CAACf,KAAM9E,EAAiBI,sBAAuB0F,eAIxEJ,CAGbyB,GC9GIiB,6MAEJvF,MAAQ,CACNwF,WAAW,EACXC,gBAAgB,EAChBC,YAAY,KAGdC,WAAa,SAAAtC,GACX,IAAImC,GAAY,EAAOC,GAAiB,EAAOC,GAAa,EAC5D,OAAOrC,EAAEC,OAAO9D,OACd,IAAK,QACHgG,GAAY,EACZ,MACF,IAAK,aACHC,GAAiB,EACjB,MACF,IAAK,SACHC,GAAa,EAGjBtF,EAAKS,SAAS,CAAC2E,YAAWC,iBAAgBC,kBAwB5CxE,kBAAoB,WAClBd,EAAKvD,MAAMwH,sFArBX,OACEvH,EAAAC,EAAAC,cAAA,OAAK+G,UAAU,OACbjH,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,WAAWuG,MAAM,UACvB9I,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,QAAQvC,QAASoE,KAAKsE,WAAY5B,UAAU,wBAA1D,eAEFjH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,aAAavC,QAASoE,KAAKsE,WAAY5B,UAAU,wBAA/D,oBAEFjH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQwC,MAAM,SAASvC,QAASoE,KAAKsE,WAAY5B,UAAU,wBAA3D,iBAGH1C,KAAKrB,MAAMyF,eAAkB3I,EAAAC,EAAAC,cAAC6I,EAAD,MAA0B,GACvDxE,KAAKrB,MAAMwF,UAAa1I,EAAAC,EAAAC,cAAC8I,EAAD,MAAqB,GAC7CzE,KAAKrB,MAAM0F,WAAc5I,EAAAC,EAAAC,cAAC+I,EAAD,MAAsB,WAxCnCnD,aAwDNC,cAAQ,KANI,SAAAG,GACzB,MAAO,CACLqB,WAAY,kBAAMrB,EAAS,CAAEf,KAAMvE,EAAYC,uBAIpCkF,CAAkC0C,GCnD7BS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECfAC,EAAe,CACnBtD,UAAU,EACVD,KAAM,GACNwD,MAAO,KACP/F,kBAAmB,eCLf8F,EAAe,CACnBtD,UAAU,EACVD,KAAM,GACNwD,MAAO,KACPC,gBAAiB,wCCHJC,EAAA,WACb,IAAMC,EAAW,wCACjB,MAAO,CACLvC,MAAO,CACLwC,SAAU,WAGR,OAAOC,IAAM,CACXC,OAHW,MAGHC,IAFAJ,8DAOdjF,WAAY,CACVsF,MAAO,SAAA7D,GACL,IAAI8D,EAAe7I,EAAc+E,GAA0D,GAA9C,IAAM5E,EAA4B4E,GAE3E4D,EAAMJ,EAAW,cAAgBM,EACrC,OAAOJ,IAAM,CACXC,OAHW,MAGHC,SAGZG,SAAU,SAAA/D,GACR,IACI4D,EAAMJ,EAAW,eAAiBxD,EAAQ5D,GAG9C,OAFA4H,QAAQC,IAAIL,GAELF,IAAM,CACXC,OALW,MAKHC,UAKd7B,OAAQ,CACN8B,MAAO,SAAA7D,GACL,IAAI8D,EAAe7I,EAAc+E,GAA0D,GAA9C,IAAM5E,EAA4B4E,GAE3E4D,EAAMJ,EAAW,UAAYM,EACjC,OAAOJ,IAAM,CACXC,OAHW,MAGHC,8BCtCRxG,cAUA8G,cASOC,GAnBjB,SAAU/G,EAAgBgH,GAA1B,IAAAhF,EAAA9B,EAAA,OAAA+G,EAAAvK,EAAAwK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,YAAKnB,IAAchF,WAAWsF,MAAOO,EAAOpE,SAFnE,OAII,OAFMZ,EAFVmF,EAAAI,KAGUrH,EAAoB8G,EAAOpE,QAAQ3C,KAH7CkH,EAAAE,KAAA,EAIUG,YAAI,CAAE5F,KAAM9E,EAAiBE,yBAA0BgF,OAAM9B,sBAJvE,OAAAiH,EAAAE,KAAA,gBAMI,OANJF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAE,KAAA,GAMUG,YAAI,CAAE5F,KAAM9E,EAAiBG,yBAA0BgJ,MAAKkB,EAAAM,KANtE,yBAAAN,EAAAO,SAAAC,EAAA,cAUA,SAAUb,EAAeE,GAAzB,IAAAhF,EAAA,OAAAiF,EAAAvK,EAAAwK,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEiB,OAFjBO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEuBC,YAAKnB,IAAchF,WAAWwF,SAAUK,EAAOpE,SAFtE,OAGI,OADMZ,EAFV4F,EAAAL,KAAAK,EAAAP,KAAA,EAGUG,YAAI,CAAC5F,KAAM9E,EAAiBK,wBAAyB6E,SAH/D,OAAA4F,EAAAP,KAAA,gBAKI,OALJO,EAAAR,KAAA,EAAAQ,EAAAH,GAAAG,EAAA,SAAAA,EAAAP,KAAA,GAKUG,YAAI,CAAC5F,KAAM9E,EAAiBM,wBAAyB6I,MAAK2B,EAAAH,KALpE,yBAAAG,EAAAF,SAAAG,EAAA,cASO,SAAUd,IAAV,OAAAE,EAAAvK,EAAAwK,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACL,OADKS,EAAAT,KAAA,EACCU,YAAUjL,EAAiBC,uBAAwBiD,GADpD,OAEL,OAFK8H,EAAAT,KAAA,EAECU,YAAUjL,EAAiBI,sBAAuB4J,GAFnD,wBAAAgB,EAAAJ,SAAAM,kBCnBGhE,cASOiE,GATjB,SAAUjE,IAAV,IAAAhC,EAAA,OAAAiF,EAAAvK,EAAAwK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,YAAKnB,IAActC,MAAMwC,UAFhD,OAGI,OADMrE,EAFVmF,EAAAI,KAAAJ,EAAAE,KAAA,EAGUG,YAAI,CAAE5F,KAAMvE,EAAYE,oBAAqByE,SAHvD,OAAAmF,EAAAE,KAAA,gBAKI,OALJF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAE,KAAA,GAKUG,YAAI,CAAE5F,KAAMvE,EAAYG,oBAAqByI,MAAKkB,EAAAM,KAL5D,yBAAAN,EAAAO,SAAAQ,EAAA,cASO,SAAUD,IAAV,OAAAhB,EAAAvK,EAAAwK,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACL,OADKO,EAAAP,KAAA,EACCU,YAAU1K,EAAYC,kBAAmB0G,GAD1C,wBAAA4D,EAAAF,SAAAS,GCVP,IAAMnC,EAAe,CACnBtD,UAAU,EACVD,KAAM,GACNwD,MAAO,KACP/F,kBAAmB,mBCHXkE,gBAUOgE,IAVjB,SAAUhE,GAAY4C,GAAtB,IAAAhF,EAAA9B,EAAA,OAAA+G,EAAAvK,EAAAwK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,YAAKnB,IAAcxB,OAAO8B,MAAOO,EAAOpE,SAF/D,OAII,OAFMZ,EAFVmF,EAAAI,KAGUrH,EAAoB8G,EAAOpE,QAAQ3C,KAH7CkH,EAAAE,KAAA,EAIUG,YAAI,CAAC5F,KAAMnE,EAAaE,qBAAsBqE,OAAM9B,sBAJ9D,OAAAiH,EAAAE,KAAA,gBAMI,OANJF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAE,KAAA,GAMUG,YAAI,CAAC5F,KAAMnE,EAAaG,qBAAsBqI,MAAKkB,EAAAM,KAN7D,yBAAAN,EAAAO,SAAAW,GAAA,cAUO,SAAUD,KAAV,OAAAnB,EAAAvK,EAAAwK,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACL,OADKO,EAAAP,KAAA,EACCU,YAAUtK,EAAaC,mBAAoB0G,IAD5C,wBAAAwD,EAAAF,SAAAY,ICCP,IAAMC,GAAcC,YAAgB,CAClCrH,WPNK,WAAwD,IAA9BxB,EAA8B8I,UAAA1K,OAAA,QAAAU,IAAAgK,UAAA,GAAAA,UAAA,GAAtBzC,EAAcgB,EAAQyB,UAAA1K,OAAA,EAAA0K,UAAA,QAAAhK,EAC7D,OAAQuI,EAAOpF,MACb,KAAK9E,EAAiBC,uBACpB,OAAOkB,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAMuD,MAAO,OAC5C,KAAKnJ,EAAiBE,yBACpB,IAAI2L,EAAgB,GAEpB,OADA3B,EAAOhF,KAAKA,KAAK6C,QAAQ,SAAAlE,GAAE,OAAIgI,EAAcjK,EAAmBiC,EAAG6F,MAAQ7F,IACpE1C,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOD,KAAKxE,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAM8C,KAASkG,GAAgBzI,kBAAmB8G,EAAO9G,oBACzG,KAAKpD,EAAiBG,yBACpB,OAAOgB,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOuD,MAAOe,EAAOf,QACpD,KAAKnJ,EAAiBI,sBACpB,OAAOe,OAAAyK,EAAA,EAAAzK,CAAA,GAAI0B,EAAX,CAAkBsG,MAAO,OAC3B,KAAKnJ,EAAiBK,wBACpB,IAAIyL,EAAe,GAEnB,OADAA,EAAalK,EAAmBsI,EAAOhF,KAAKA,KAAKwE,MAAQQ,EAAOhF,KAAKA,KAC9D/D,OAAAyK,EAAA,EAAAzK,CAAA,GAAI0B,EAAX,CAAkB8C,KAAKxE,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAM8C,KAASmG,KAC7C,QAEE,OAAOjJ,IOXXkE,MNRK,WAAmD,IAA9BlE,EAA8B8I,UAAA1K,OAAA,QAAAU,IAAAgK,UAAA,GAAAA,UAAA,GAAtBzC,EAAcgB,EAAQyB,UAAA1K,OAAA,EAAA0K,UAAA,QAAAhK,EACxD,OAAQuI,EAAOpF,MACb,KAAKvE,EAAYC,kBACf,OAAOW,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAMuD,MAAO,OAC5C,KAAK5I,EAAYE,oBACf,OAAOU,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOD,KAAMuE,EAAOhF,KAAKA,OACxD,KAAK3E,EAAYG,oBACf,OAAOS,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOuD,MAAOe,EAAOf,QACpD,QAEE,OAAOtG,IMDXgF,OFRK,WAAoD,IAA9BhF,EAA8B8I,UAAA1K,OAAA,QAAAU,IAAAgK,UAAA,GAAAA,UAAA,GAAtBzC,EAAcgB,EAAQyB,UAAA1K,OAAA,EAAA0K,UAAA,QAAAhK,EAGzD,OAFAmI,QAAQC,IAAIG,GAEJA,EAAOpF,MACb,KAAKnE,EAAaC,mBAChB,OAAOO,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAMuD,MAAO,OAC5C,KAAKxI,EAAaE,qBAClB,IAAIkL,EAAY,GAEhB,OADA7B,EAAOhF,KAAKA,KAAK6C,QAAQ,SAAAlE,GAAE,OAAIkI,EAAUnK,EAAmBiC,EAAG6F,MAAQ7F,IAChE1C,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOD,KAAKxE,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAM8C,KAASoG,GAAY3I,kBAAmB8G,EAAO9G,oBACnG,KAAKzC,EAAaG,qBAChB,OAAOK,OAAAyK,EAAA,EAAAzK,CAAA,GAAK0B,EAAZ,CAAmB+C,UAAU,EAAOuD,MAAOe,EAAOf,QACpD,QAEE,OAAOtG,MEHPmJ,GAAiBC,cACjBC,GAAQC,YAAYV,GAAaW,YAAgBJ,KACvDA,GAAeK,IAAIlB,GACnBa,GAAeK,IAAIpC,GACnB+B,GAAeK,IAAIf,IACnBgB,IAASC,OACP5M,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUN,MAAOA,IAAOvM,EAAAC,EAAAC,cAAC4M,EAAD,OACxBC,SAASC,eAAe,SRqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.396c21e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",  \r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",  \r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n}\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\"\r\n}","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  characterValidator = character => {\r\n    character.name = isStringEmpty(character.name) ? (character.aliases[0] + \"*\") : character.name;\r\n    return character;\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if(isStringEmpty(it.culture)){      \r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }]\r\n    return (\r\n      <div>\r\n        <ReactTable\r\n          data={filteredCharacters}\r\n          columns={columns}\r\n          resolveData={data => data.map(row => this.characterValidator(row))}\r\n          pageSize={this.state.pageSize}\r\n          onPageSizeChange={this.changePageSize}\r\n          showFilters={true}\r\n          loading={this.props.fetchingCharacters}\r\n        />\r\n        <CallApiButton\r\n          onClick={this.getMoreCharacters}\r\n          buttonName={\"Get More Characters\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  }\r\n\r\n  updateFilter = e => {\r\n    this.setState({bookFilter: e.target.value});\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({pageSize});    \r\n  }\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = (apiDate) => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: (title => <span className='book-title'>{this.reformatBookTitle(title.value)}</span>),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: 'released',\r\n        Cell: (date => <span className='book release-date'>{this.convertApiDateToFriendlyDate(date.value)}</span>),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"book-container\">\r\n        <ReactTable\r\n          data={Object.values(this.props.books)}\r\n          columns={columns}\r\n          loading={this.props.fetchingBooks}\r\n          showFilters={true}\r\n          filterable={true}\r\n          pageSize={this.state.pageSize}\r\n          onPageSizeChange={this.changePageSize}\r\n          pageSizeOptions={[5, 10, 15]}\r\n        />     \r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: ''\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 20\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  render() {\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort\r\n    }, {\r\n      Header: \"Current Lord link\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: lordName => (<span>{lordName.value ? lordName.value : \"Name unknown\"}</span>),\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className=\"house-container\">\r\n        <ReactTable\r\n          data={Object.values(this.props.houses)}\r\n          resolveData={data => data.map(this.resolveHouseData)}\r\n          columns={columns}\r\n          loading={this.props.fetchingHouses}\r\n          showFilters={true}\r\n          filterable={true}\r\n          pageSize={this.state.pageSize}\r\n          onPageSizeChange={this.changePageSize}\r\n        />\r\n        <CallApiButton\r\n          onClick={this.getMoreHouses}\r\n          buttonName={\"Get More Houses\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({id: getIdFromUrlString(house.currentLord)}));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({type: characterActions.FETCH_CHARACTER_START, payload})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/characterContainer'\r\nimport BookContainer from './containers/bookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport HouseContainer from './containers/houseContainer';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: false,\r\n    viewHouses: true\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch(e.target.value){\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n    }\r\n    this.setState({viewBooks, viewCharacters, viewHouses});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div id=\"selector\" align='center'>\r\n          <span>\r\n            <button value='books' onClick={this.changeView} className='view-selector-button'>View Books</button>\r\n          </span>\r\n          <span>\r\n            <button value='characters' onClick={this.changeView} className='view-selector-button'>View Characters</button>\r\n          </span>\r\n          <span>\r\n            <button value='houses' onClick={this.changeView} className='view-selector-button'>View Houses</button>\r\n          </span>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer />) : ''}\r\n        {this.state.viewBooks ? (<BookContainer />) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.forEach(it => newCharacters[getIdFromUrlString(it.url)] = it);      \r\n      return { ...state, fetching: false, list: {...state.list, ...newCharacters}, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return {...state, error: null};\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      let newCharacter = {};\r\n      newCharacter[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return {...state, list: {...state.list, ...newCharacter}};\r\n    default:\r\n      // console.log(\"Failed to match action: \" + action.type + \" from characterReducer\");\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      return { ...state, fetching: false, list: action.data.data };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function () {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method, url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload) ? ('?' + constructQueryStringFromObj(payload)) : '';\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method, url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        console.log(url);\r\n        \r\n        return axios({\r\n          method, url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload) ? ('?' + constructQueryStringFromObj(payload)) : '';\r\n        let method = 'get';\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method, url\r\n        });\r\n      }\r\n    }\r\n  }\r\n}","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  console.log(action);\r\n  \r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n    let newHouses = {};\r\n    action.data.data.forEach(it => newHouses[getIdFromUrlString(it.url)] = it);      \r\n    return { ...state, fetching: false, list: {...state.list, ...newHouses}, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try{\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested});\r\n  } catch (error){\r\n    yield put({type: houseActions.HOUSES_FETCH_FAILURE, error});\r\n  }\r\n}\r\n\r\nexport function* houseSagas(){\r\n  yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}