{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/CharacterContainer.js","containers/BookContainer.js","containers/HouseContainer.js","components/characterStuff/CharacterDrillDown.js","components/houseStuff/SwornMemberList.js","components/houseStuff/HouseDrillDown.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","reducers/appReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","className","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","SELECT_CHARACTER","BACK_SELECT_CHARACTER","generalActions","CLOSE_DRILL_DOWN","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","SELECT_HOUSE","FETCH_HOUSE_START","FETCH_HOUSE_SUCCESS","FETCH_HOUSE_FAILURE","BACK_SELECT_HOUSE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","generateListKey","listName","listItem","concat","url","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","getCharacterNameOrAlias","rowInfo","original","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","tdProps","e","handleOriginal","selectCharacter","filterBooksAppearedIn","i","books","bookId","name","createBookList","console","log","povBooks","bookUrl","constructBooksAppearedIn","componentDidMount","componentDidUpdate","_this2","this","domainContainerClassName","isDrillDownOpen","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","Cell","gender","type","onChange","checked","align","react_table_es","data","onPageSizeChange","showFilters","loading","fetchingCharacters","getTdProps","components_general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","target","reformatBookTitle","title","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","sorthMethod","date","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houseId","selectedHouse","selectHouse","characterId","constructLordNameCell","houses","house","forEach","fetchCharacter","sortMethod","region","show","resolveData","fetchingHouses","CharacterDrillDown","constructAliases","character","arr","push","handleBackClick","historyObj","appHistory","domain","backSelectCharacter","backSelectHouse","showBackButton","closeDrillDown","born","died","app","drillDownHistory","SwornMemberList","onMemberClick","event","currentTarget","members","member","memberId","HouseDrillDown","checkForAndFetchCharacters","overlordId","overlord","fetchHouse","swornMembers","memberUrl","getLordFromCharacters","selectLord","selectOverlord","isLordLoaded","words","coatOfArms","overlordName","houseStuff_SwornMemberList","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","selectedCharacter","bookButtonClassName","houseButtonClassName","characterButtonClassName","hidden","containers_CharacterContainer","containers_BookContainer","containers_HouseContainer","characterStuff_CharacterDrillDown","houseStuff_HouseDrillDown","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","fetch","queryString","fetchOne","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseFetch","houseSagas","houseSagas_marked","houseSagas_marked2","all","t1","t2","t3","houseSagas_marked3","rootReducer","combineReducers","arguments","objectSpread","newCharacters","newCharacter","characterList","book","newHouses","newHouse","houseList","newCharacterHistory","unshift","newHouseHistory","shift","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.857e531e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CallApiButton.css';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button className=\"query-api\" onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",\r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",\r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\",\r\n  SELECT_CHARACTER: \"SELECT_CHARACTER\",\r\n  BACK_SELECT_CHARACTER: \"BACK_SELECT_CHARACTER\"\r\n};\r\n\r\nexport const generalActions = {\r\n  CLOSE_DRILL_DOWN: \"CLOSE_DRILL_DOWN\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n};\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\",\r\n  SELECT_HOUSE: \"SELECT_HOUSE\",\r\n  FETCH_HOUSE_START: \"FETCH_HOUSE\",\r\n  FETCH_HOUSE_SUCCESS: \"FETCH_HOUSE_SUCCESS\",\r\n  FETCH_HOUSE_FAILURE: \"FETCH_HOUSE_FAILURE\",\r\n  BACK_SELECT_HOUSE: \"BACK_SELECT_HOUSE\"\r\n};\r\n\r\n","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function generateListKey(listName, listItem){ \r\n  if (typeof listItem === 'string') {\r\n    return `${listName}-${listItem}`;\r\n  } else {\r\n    return `${listName}-${getIdFromUrlString(listItem.url)}`;\r\n  }\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter, getIdFromUrlString, generateListKey } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  getCharacterNameOrAlias = rowInfo => {\r\n    if (rowInfo.value)\r\n      return rowInfo.value;\r\n    return rowInfo.original.aliases[0] + \"*\";\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if (isStringEmpty(it.culture)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"characterName\") {\r\n          let id = rowInfo.original.id;\r\n          this.props.selectCharacter({ id });\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  filterBooksAppearedIn = (filter, row) => {\r\n    for (let i = 0; i < row.books.length; i++) {\r\n      let bookId = getIdFromUrlString(row.books[i]);\r\n      if (this.props.books[bookId]) {\r\n        if (this.props.books[bookId].name.toLowerCase().includes(filter.value.toLowerCase()))\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createBookList = rowInfo => {\r\n    //rowInfo only has urls\\\r\n    console.log(rowInfo);\r\n    let povBooks = rowInfo.original.povBooks.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId => !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}*</li>))\r\n    return povBooks.concat(rowInfo.row.books.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId => !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}</li>)));\r\n  }\r\n\r\n  constructBooksAppearedIn = props => {\r\n\r\n    return (<span></span>)\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      className: \"clickable\",\r\n      filterMethod: commonFilter,\r\n      Cell: name => (<span>{this.getCharacterNameOrAlias(name)}</span>)\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }, {\r\n      Header: \"Books Appeared In\",\r\n      accessor: \"books\",\r\n      Cell: books => (<span><ul className='in-table-list'>{this.createBookList(books)}</ul></span>),\r\n      filterable: true,\r\n      filterMethod: this.filterBooksAppearedIn,\r\n      Footer: <span>*Point of View book</span>\r\n    }]\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <h2 className='table-title' align='center'>Characters in the \"Game of Thrones\" series</h2>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={filteredCharacters}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            showFilters={true}\r\n            loading={this.props.fetchingCharacters}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className=\"api-button\">\r\n          <CallApiButton\r\n            onClick={this.getMoreCharacters}\r\n            buttonName={\"Get More Characters\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching,\r\n    books: state.books.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"react-table/react-table.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ bookFilter: e.target.value });\r\n  };\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  };\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  render() {\r\n    const domainContainerClassName =\r\n      \"domain-container \" +\r\n      (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: title => (\r\n          <span className=\"book-title\">\r\n            {this.reformatBookTitle(title.value)}\r\n          </span>\r\n        ),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: \"released\",\r\n        Cell: date => (\r\n          <span className=\"book release-date\">\r\n            {this.convertApiDateToFriendlyDate(date.value)}\r\n          </span>\r\n        ),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <h2 className=\"table-title\" align=\"center\">\r\n          \"Game of Thrones\" books\r\n        </h2>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.books)}\r\n            columns={columns}\r\n            loading={this.props.fetchingBooks}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            pageSizeOptions={[5, 10, 15]}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: \"\"\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 10\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    // console.log(houseData);\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"name\") {\r\n          let houseId = getIdFromUrlString(rowInfo.original.url);\r\n          if (!this.props.selectedHouse || houseId !== this.props.selectedHouse.id) {\r\n            this.props.selectHouse({ id: houseId });\r\n          } else\r\n            console.log(\"House already selected\");\r\n        } else if (column.id === \"lordName\") {\r\n          if (rowInfo.row.lordName) {\r\n            let characterId = getIdFromUrlString(rowInfo.row.currentLord);\r\n            this.props.selectCharacter({ id: characterId })\r\n          }\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  constructLordNameCell = props => {\r\n    const hasLordName = !!props.row.currentLord && props.row.lordName;\r\n    const className = hasLordName ? \"clickable\" : \"unclickable\";\r\n    const lordName = !!props.row.currentLord ? (!!props.row.lordName ? props.row.lordName : \"Loading...\") : \"unknown\";\r\n    return (<span className={className}>{lordName}</span>)\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter,\r\n      className: 'table-item clickable'\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort,\r\n      className: 'table-item unclickable',\r\n      Cell: region => (<span>{region.value ? region.value : 'Region unknown'}</span>)\r\n    }, {\r\n      Header: \"Current Lord Id\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: this.constructLordNameCell,\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <h2 className='table-title' align='center'>The Houses of \"Game of Thrones\"</h2>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.houses)}\r\n            resolveData={data => data.map(this.resolveHouseData)}\r\n            columns={columns}\r\n            loading={this.props.fetchingHouses}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className='api-button'>\r\n          <CallApiButton\r\n            onClick={this.getMoreHouses}\r\n            buttonName={\"Get More Houses\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({ id: getIdFromUrlString(house.currentLord) }));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list,\r\n    selectedHouse: state.houses.selectedHouse\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    selectHouse: payload => dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport '../../assets/stylesheets/drillDown.css';\r\nimport { generateListKey } from \"../../utils/utils\";\r\nimport { generalActions } from \"../../constants/constants\";\r\nimport { characterActions, houseActions } from '../../constants/constants';\r\n\r\nclass CharacterDrillDown extends Component {\r\n  constructAliases = () => {\r\n    let aliases = this.props.character.aliases;\r\n    let i = this.props.character.name ? 0 : 1;\r\n    let arr = [];\r\n    for (i; i < aliases.length; i++) {\r\n      if (!!aliases[i])\r\n        arr.push(\r\n          <li\r\n            className=\"unclickable\"\r\n            key={generateListKey(\"alias-list\", aliases[i])}\r\n          >\r\n            {aliases[i]}\r\n          </li>\r\n        );\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  handleBackClick = () => {\r\n    const historyObj = this.props.appHistory[1];\r\n    console.log(historyObj);\r\n    \r\n    if(historyObj.domain === \"character\"){\r\n      this.props.backSelectCharacter({id: historyObj.id});\r\n    } else if (historyObj.domain === \"house\"){\r\n      this.props.backSelectHouse({id: historyObj.id});\r\n    }\r\n  }\r\n\r\n  showBackButton = () => {\r\n    return this.props.appHistory.length > 1;\r\n  }\r\n\r\n  render() {\r\n    const name = this.props.character.name\r\n      ? this.props.character.name\r\n      : this.props.character.aliases[0] + \"*\";\r\n    const culture = this.props.character.culture\r\n      ? this.props.character.culture\r\n      : \"\";\r\n    const aliases = this.constructAliases();\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"drill-down-navigation unclickable\" >\r\n        {this.showBackButton() ?\r\n            <i className=\"material-icons drill-down-back clickable\" onClick={this.handleBackClick}>\r\n              arrow_back\r\n            </i>\r\n            : ''\r\n          }{this.showBackButton() ? <span onClick={this.handleBackClick} className=\"clickable\">Back</span> : ''}\r\n          <i className=\"material-icons close-drill-down clickable\" onClick={this.props.closeDrillDown}>close</i>\r\n          <span onClick={this.props.closeDrillDown} className=\"close-drill-down clickable\">Close</span>\r\n        </span>\r\n        <div className=\"character-title title\">\r\n          <h3 className=\"character-name name\" align=\"center\">\r\n            {name}\r\n          </h3>\r\n          <h4 align=\"center\">\r\n            {culture} {this.props.character.gender}{\" \"}\r\n            {culture ? \"\" : \"from unknwon\"}\r\n          </h4>\r\n        </div>\r\n        <div className=\"character-info info\">\r\n          <p>\r\n            Born:{\" \"}\r\n            {this.props.character.born ? this.props.character.born : \"unknwon\"}\r\n          </p>\r\n          <p>\r\n            Died:{\" \"}\r\n            {this.props.character.died\r\n              ? this.props.character.died\r\n              : \"alive or unknown\"}{\" \"}\r\n          </p>\r\n          {!!aliases.length\r\n            ? this.props.character.name\r\n              ? \"Aliases: \"\r\n              : \"Other Aliases: \"\r\n            : \"\"}\r\n          <ul>{aliases}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appHistory: state.app.drillDownHistory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeDrillDown: () => dispatch({type: generalActions.CLOSE_DRILL_DOWN}),\r\n    backSelectCharacter: payload => dispatch({type: characterActions.BACK_SELECT_CHARACTER, payload}),\r\n    backSelectHouse: payload => dispatch({type: houseActions.BACK_SELECT_HOUSE, payload})\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterDrillDown);\r\n","import React from 'react';\r\nimport { generateListKey, getIdFromUrlString } from '../../utils/utils';\r\n\r\nconst SwornMemberList = props => {\r\n  const listName = 'sworn-member'\r\n  const onMemberClick = event => {\r\n    if (event.currentTarget.value !== 0)\r\n      props.onMemberClick(event.currentTarget.value);\r\n  }\r\n  const members = props.members.map(member => {\r\n    const memberId = getIdFromUrlString(member);\r\n    const character = props.characters[memberId];\r\n    const isCharacterLoaded = !!character;\r\n    let id, className, name, key;\r\n    if (isCharacterLoaded) {\r\n      id = getIdFromUrlString(character.url);\r\n      className = \"clickable\";\r\n      name = !!character.name ? character.name : (character.aliases[0] + \"*\");      \r\n      key = generateListKey(listName, character);\r\n    } else {\r\n      id = 0;\r\n      className = \"unclickable\";\r\n      name = \"Loading...\";\r\n      key = generateListKey(listName, `${memberId}`);\r\n    }\r\n    return (<li onClick={onMemberClick} className={className} value={id} key={key}>{name}</li>)\r\n  });\r\n  return (\r\n    <ul>\r\n      {members}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SwornMemberList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport '../../assets/stylesheets/drillDown.css';\r\nimport { getIdFromUrlString } from \"../../utils/utils\";\r\nimport { houseActions, characterActions, generalActions } from \"../../constants/constants\";\r\nimport SwornMemberList from \"./SwornMemberList\";\r\n\r\nclass HouseDrillDown extends Component {\r\n  checkForAndFetchCharacters = () => {\r\n    const overlordId = getIdFromUrlString(this.props.house.overlord);\r\n    if (overlordId && !this.props.houses[overlordId]) {\r\n      this.props.fetchHouse({\r\n        id: getIdFromUrlString(this.props.house.overlord)\r\n      });\r\n    }\r\n    this.props.house.swornMembers.forEach(memberUrl => {\r\n      const id = getIdFromUrlString(memberUrl);\r\n      if (!this.props.characters[id]) {\r\n        this.props.fetchCharacter({ id });\r\n      }\r\n    });\r\n  };\r\n\r\n  getLordFromCharacters = () => {\r\n    return this.props.characters[\r\n      getIdFromUrlString(this.props.house.currentLord)\r\n    ];\r\n  };\r\n\r\n  selectLord = () => {\r\n    if (this.getLordFromCharacters()) {\r\n      const id = getIdFromUrlString(this.getLordFromCharacters().url);\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  selectOverlord = () => {\r\n    if (this.props.house.overlord) {\r\n      const id = getIdFromUrlString(this.props.house.overlord);\r\n      if (this.props.houses[id]) {\r\n        this.props.selectHouse({ id });\r\n      }\r\n    }\r\n  };\r\n\r\n  showBackButton = () => {\r\n    return this.props.appHistory.length > 1;\r\n  }\r\n\r\n  handleBackClick = () => {\r\n    const historyObj = this.props.appHistory[1];\r\n    if (historyObj.domain === \"character\") {\r\n      this.props.backSelectCharacter({ id: historyObj.id });\r\n    } else if (historyObj.domain === \"house\") {\r\n      this.props.backSelectHouse({ id: historyObj.id });\r\n    }\r\n  }\r\n\r\n  onMemberClick = id => {\r\n    if (this.props.characters[id]) {\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  isLordLoaded = () => {\r\n    return !!this.props.house.currentLord && this.getLordFromCharacters();\r\n  };\r\n\r\n  render() {\r\n    const words = this.props.house.words\r\n      ? '\"' + this.props.house.words + '\"'\r\n      : \"\";\r\n    const lordName = this.isLordLoaded()\r\n      ? this.getLordFromCharacters().name\r\n      : \"unknown\";\r\n    const coatOfArms = this.props.house.coatOfArms\r\n      ? this.props.house.coatOfArms\r\n      : \"unknown\";\r\n    const overlord = this.props.house.overlord\r\n      ? this.props.houses[getIdFromUrlString(this.props.house.overlord)]\r\n      : \"\";\r\n    let overlordName = \"unknown\";\r\n    if (overlord) {\r\n      overlordName = overlord.name;\r\n    }\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"drill-down-navigation\" >\r\n          {this.showBackButton() ?\r\n            <i className=\"material-icons drill-down-back clickable\" onClick={this.handleBackClick}>\r\n              arrow_back\r\n            </i>\r\n            : ''\r\n          }{this.showBackButton() ? <span onClick={this.handleBackClick} className=\"clickable\">Back</span> : ''}\r\n          <i className=\"material-icons close-drill-down clickable\" onClick={this.props.closeDrillDown}>\r\n            close\r\n          </i>\r\n          <span onClick={this.props.closeDrillDown} className=\"close-drill-down clickable\">Close</span>\r\n        </span>\r\n        <div className=\"house-title title\">\r\n          <h3 className=\"house-name name\" align=\"center\">\r\n            {this.props.house.name}\r\n          </h3>\r\n          <h4 className=\"house-words words\" align=\"center\">\r\n            {words}\r\n          </h4>\r\n        </div>\r\n        <div className=\"house-info info\">\r\n          <p className={this.isLordLoaded() ? \"clickable\" : \"unclickable\"} onClick={this.selectLord}>Current Lord: {lordName}</p>\r\n          <p>Coat of Arms: {coatOfArms}</p>\r\n          <p className={!!overlord ? \"clickable\" : \"unclickable\"} onClick={this.selectOverlord}>Overlord: {overlordName}</p>\r\n        </div>\r\n        Sworn Members:\r\n        {this.props.house.swornMembers.length ? (\r\n          <SwornMemberList\r\n            onMemberClick={this.onMemberClick}\r\n            members={this.props.house.swornMembers}\r\n            characters={this.props.characters}\r\n          />\r\n        ) : (\r\n            \" None\"\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    houses: state.houses.list,\r\n    appHistory: state.app.drillDownHistory\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouse: payload =>\r\n      dispatch({ type: houseActions.FETCH_HOUSE_START, payload }),\r\n    selectCharacter: payload =>\r\n      dispatch({ type: characterActions.SELECT_CHARACTER, payload }),\r\n    selectHouse: payload =>\r\n      dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    fetchCharacter: payload =>\r\n      dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    closeDrillDown: () => dispatch({ type: generalActions.CLOSE_DRILL_DOWN }),\r\n    backSelectCharacter: payload => dispatch({ type: characterActions.BACK_SELECT_CHARACTER, payload }),\r\n    backSelectHouse: payload => dispatch({ type: houseActions.BACK_SELECT_HOUSE, payload })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseDrillDown);\r\n","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/CharacterContainer'\r\nimport BookContainer from './containers/BookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport './App.scss';\r\nimport HouseContainer from './containers/HouseContainer';\r\nimport CharacterDrillDown from './components/characterStuff/CharacterDrillDown';\r\nimport HouseDrillDown from './components/houseStuff/HouseDrillDown';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: false,\r\n    viewHouses: true\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch (e.target.value) {\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ viewBooks, viewCharacters, viewHouses });\r\n  }\r\n\r\n  render() {\r\n    const isDrillDownOpen = this.props.selectedCharacter || this.props.selectedHouse;\r\n    const baseClassName = \"view-selector-button\";\r\n    const bookButtonClassName = baseClassName + (this.state.viewBooks ? \" viewing\" : '');\r\n    const houseButtonClassName = baseClassName + (this.state.viewHouses ? \" viewing\" : '');\r\n    const characterButtonClassName = baseClassName + (this.state.viewCharacters ? \" viewing\" : '');\r\n    return (\r\n      <div className=\"got-app\">\r\n        <div id=\"domain-selector\" align='center'>\r\n          <button value='books' hidden={this.state.viewBooks} onClick={this.changeView} className={bookButtonClassName}>{this.state.viewBooks ? \"Viewing Books\" : \"View Books\"}</button>\r\n          <button value='characters' onClick={this.changeView} hidden={this.state.viewCharacters} className={characterButtonClassName}>{this.state.viewCharacters ? \"Viewing Characters\" : \"View Characters\"}</button>\r\n          <button value='houses' onClick={this.changeView} hidden={this.state.viewHouses} className={houseButtonClassName}>{this.state.viewHouses ? \"Viewing Houses\" : \"View Houses\"}</button>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer isDrillDownOpen={isDrillDownOpen} />) : ''}\r\n        {this.state.viewBooks ? (<BookContainer isDrillDownOpen={isDrillDownOpen} />) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer isDrillDownOpen={isDrillDownOpen} />) : ''}\r\n        {this.props.selectedCharacter ? (<CharacterDrillDown character={this.props.selectedCharacter} />) : ''}\r\n        {this.props.selectedHouse ? (<HouseDrillDown house={this.props.selectedHouse} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCharacter: state.characters.selectedCharacter,\r\n    selectedHouse: state.houses.selectedHouse\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions, houseActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedCharacter: null\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.map(it => { return { ...it, id: getIdFromUrlString(it.url) } }).forEach(it => newCharacters[it.id] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newCharacters }, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return { ...state, error: null };\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      const newCharacter = action.data.data;\r\n      newCharacter.id = getIdFromUrlString(newCharacter.url);\r\n      const characterList = {...state.list};\r\n      characterList[newCharacter.id] = newCharacter;      \r\n      return { ...state, list: characterList };\r\n    case characterActions.FETCH_CHARACTER_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error }\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case characterActions.SELECT_CHARACTER:\r\n      let selectedCharacter = state.list[action.payload.id];\r\n      return { ...state, selectedCharacter };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case houseActions.SELECT_HOUSE:\r\n      return { ...state, selectedCharacter: null };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      const books = action.data.data.map(book => {return {...book, id: getIdFromUrlString(book.url)}});\r\n      return { ...state, fetching: false, list: books };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import { characterActions, houseActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  drillDownHistory: []\r\n}\r\n\r\nexport function appReducer(state = initialState, action) {\r\n  let drillDownHistory;\r\n  switch (action.type) {\r\n    case characterActions.SELECT_CHARACTER:\r\n      let newCharacterHistory = { domain: \"character\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newCharacterHistory);\r\n      drillDownHistory = drillDownHistory.slice(0, 20);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.SELECT_HOUSE:\r\n      let newHouseHistory = { domain: \"house\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newHouseHistory);\r\n      drillDownHistory = drillDownHistory.slice(0, 20);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.shift();\r\n      return {...state, drillDownHistory};\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function() {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions, characterActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedHouse: null\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n      let newHouses = {};\r\n      action.data.data.map(it => { return { ...it, id: getIdFromUrlString(it.url) } }).forEach(it => newHouses[it.id] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newHouses }, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case houseActions.FETCH_HOUSE_START:\r\n      return { ...state, error: null };\r\n    case houseActions.FETCH_HOUSE_SUCCESS:\r\n      const newHouse = action.data.data;\r\n      newHouse.id = getIdFromUrlString(newHouse.url);\r\n      const houseList = {...state.list};\r\n      houseList[newHouse.id] = newHouse;\r\n      return { ...state, list: houseList };\r\n    case houseActions.FETCH_HOUSE_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case houseActions.SELECT_HOUSE:\r\n      let selectedHouse = state.list[action.payload.id];\r\n      return { ...state, selectedHouse };\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case characterActions.SELECT_CHARACTER:\r\n      return { ...state, selectedHouse: null };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try {\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: houseActions.HOUSES_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* houseFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().houses.fetchOne, action.payload);\r\n    yield put({type: houseActions.FETCH_HOUSE_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: houseActions.FETCH_HOUSE_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* houseSagas() {\r\n  yield all([\r\n    yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses),\r\n    yield takeEvery(houseActions.FETCH_HOUSE_START, houseFetch)\r\n  ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { appReducer } from './reducers/appReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}