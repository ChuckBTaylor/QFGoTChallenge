{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/CharacterContainer.js","containers/BookContainer.js","containers/HouseContainer.js","components/characterStuff/CharacterDrillDown.js","components/houseStuff/SwornMemberList.js","components/houseStuff/HouseDrillDown.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","reducers/appReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","className","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","SELECT_CHARACTER","BACK_SELECT_CHARACTER","generalActions","CLOSE_DRILL_DOWN","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","SELECT_HOUSE","FETCH_HOUSE_START","FETCH_HOUSE_SUCCESS","FETCH_HOUSE_FAILURE","BACK_SELECT_HOUSE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","generateListKey","listName","listItem","concat","url","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","getCharacterNameOrAlias","rowInfo","original","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","tdProps","e","handleOriginal","selectCharacter","filterBooksAppearedIn","i","books","bookId","name","createBookList","console","log","povBooks","bookUrl","constructBooksAppearedIn","componentDidMount","componentDidUpdate","_this2","this","domainContainerClassName","isDrillDownOpen","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","Cell","gender","type","onChange","checked","react_table_es","data","onPageSizeChange","showFilters","loading","fetchingCharacters","getTdProps","general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","target","reformatBookTitle","title","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","sorthMethod","date","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houseId","selectedHouse","selectHouse","characterId","constructLordNameCell","houses","house","forEach","fetchCharacter","sortMethod","region","show","resolveData","fetchingHouses","CharacterDrillDown","constructAliases","character","arr","push","handleBackClick","historyObj","appHistory","domain","backSelectCharacter","backSelectHouse","showBackButton","closeDrillDown","align","born","died","app","drillDownHistory","SwornMemberList","onMemberClick","event","currentTarget","members","member","HouseDrillDown","checkForAndFetchCharacters","overlord","fetchHouse","swornMembers","getLordFromCharacters","selectLord","selectOverlord","isLordLoaded","words","coatOfArms","overlordName","houseStuff_SwornMemberList","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","selectedCharacter","containers_CharacterContainer","containers_BookContainer","containers_HouseContainer","characterStuff_CharacterDrillDown","houseStuff_HouseDrillDown","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","fetch","queryString","fetchOne","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseFetch","houseSagas","houseSagas_marked","houseSagas_marked2","all","t1","t2","t3","houseSagas_marked3","rootReducer","combineReducers","arguments","objectSpread","newCharacters","newCharacter","characterList","book","newHouses","newHouse","houseList","newCharacterHistory","unshift","newHouseHistory","shift","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de2c3ba8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button className=\"\" onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",\r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",\r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\",\r\n  SELECT_CHARACTER: \"SELECT_CHARACTER\",\r\n  BACK_SELECT_CHARACTER: \"BACK_SELECT_CHARACTER\"\r\n};\r\n\r\nexport const generalActions = {\r\n  CLOSE_DRILL_DOWN: \"CLOSE_DRILL_DOWN\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n};\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\",\r\n  SELECT_HOUSE: \"SELECT_HOUSE\",\r\n  FETCH_HOUSE_START: \"FETCH_HOUSE\",\r\n  FETCH_HOUSE_SUCCESS: \"FETCH_HOUSE_SUCCESS\",\r\n  FETCH_HOUSE_FAILURE: \"FETCH_HOUSE_FAILURE\",\r\n  BACK_SELECT_HOUSE: \"BACK_SELECT_HOUSE\"\r\n};\r\n\r\n","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function generateListKey(listName, listItem) {\r\n  if (typeof listItem === 'string') {\r\n    return `${listName}-${listItem}`;\r\n  } else {\r\n    return `${listName}-${getIdFromUrlString(listItem.url)}`;\r\n  }\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter, getIdFromUrlString, generateListKey } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  getCharacterNameOrAlias = rowInfo => {\r\n    if (rowInfo.value)\r\n      return rowInfo.value;\r\n    return rowInfo.original.aliases[0] + \"*\";\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if (isStringEmpty(it.culture)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"characterName\") {\r\n          let id = rowInfo.original.id;\r\n          this.props.selectCharacter({ id });\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  filterBooksAppearedIn = (filter, row) => {\r\n    for (let i = 0; i < row.books.length; i++) {\r\n      let bookId = getIdFromUrlString(row.books[i]);\r\n      if (this.props.books[bookId]) {\r\n        if (this.props.books[bookId].name.toLowerCase().includes(filter.value.toLowerCase()))\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createBookList = rowInfo => {\r\n    //rowInfo only has urls\\\r\n    console.log(rowInfo);\r\n    let povBooks = rowInfo.original.povBooks.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId =>  !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}*</li>))\r\n    return povBooks.concat(rowInfo.row.books.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId => !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}</li>)));\r\n  }\r\n\r\n  constructBooksAppearedIn = props => {\r\n\r\n    return(<span></span>)\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Cell: name => (<span>{this.getCharacterNameOrAlias(name)}</span>)\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }, {\r\n      Header: \"Books Appeared In\",\r\n      accessor: \"books\",\r\n      Cell: books => (<span><ul className='in-table-list'>{this.createBookList(books)}</ul></span>),\r\n      filterable: true,\r\n      filterMethod: this.filterBooksAppearedIn,\r\n      Footer: <span>*Point of View book</span>\r\n    }]\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={filteredCharacters}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            showFilters={true}\r\n            loading={this.props.fetchingCharacters}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className=\"api-button\">\r\n          <CallApiButton\r\n            onClick={this.getMoreCharacters}\r\n            buttonName={\"Get More Characters\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching,\r\n    books: state.books.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  }\r\n\r\n  updateFilter = e => {\r\n    this.setState({ bookFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = (apiDate) => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: (title => <span className='book-title'>{this.reformatBookTitle(title.value)}</span>),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: 'released',\r\n        Cell: (date => <span className='book release-date'>{this.convertApiDateToFriendlyDate(date.value)}</span>),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.books)}\r\n            columns={columns}\r\n            loading={this.props.fetchingBooks}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            pageSizeOptions={[5, 10, 15]}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: ''\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 20\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    // console.log(houseData);\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"name\") {\r\n          let houseId = getIdFromUrlString(rowInfo.original.url);\r\n          if(!this.props.selectedHouse || houseId !== this.props.selectedHouse.id){\r\n            this.props.selectHouse({ id: houseId });\r\n          }else\r\n            console.log(\"House already selected\");\r\n        } else if (column.id === \"lordName\") {\r\n          if (rowInfo.row.lordName) {\r\n            let characterId = getIdFromUrlString(rowInfo.row.currentLord);\r\n            this.props.selectCharacter({ id: characterId })\r\n          }\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  constructLordNameCell = props => {\r\n    const hasLordName = !!props.row.currentLord && props.row.lordName;\r\n    const className = hasLordName ? \"clickable\" : \"unclickable\";\r\n    const lordName = !!props.row.currentLord ? (!!props.row.lordName ? props.row.lordName : \"Loading...\") : \"unknown\";\r\n    return (<span className={className}>{lordName}</span>)\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort,\r\n      Cell: region => (<span>{region.value ? region.value : 'Region unknown'}</span>)\r\n    }, {\r\n      Header: \"Current Lord Id\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: this.constructLordNameCell,\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.houses)}\r\n            resolveData={data => data.map(this.resolveHouseData)}\r\n            columns={columns}\r\n            loading={this.props.fetchingHouses}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className='api-button'>\r\n          <CallApiButton\r\n            onClick={this.getMoreHouses}\r\n            buttonName={\"Get More Houses\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({ id: getIdFromUrlString(house.currentLord) }));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list,\r\n    selectedHouse: state.houses.selectedHouse\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    selectHouse: payload => dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { generateListKey } from \"../../utils/utils\";\r\nimport { generalActions } from \"../../constants/constants\";\r\nimport { characterActions, houseActions } from '../../constants/constants';\r\n\r\nclass CharacterDrillDown extends Component {\r\n  constructAliases = () => {\r\n    let aliases = this.props.character.aliases;\r\n    let i = this.props.character.name ? 0 : 1;\r\n    let arr = [];\r\n    for (i; i < aliases.length; i++) {\r\n      if (!!aliases[i])\r\n        arr.push(\r\n          <li\r\n            className=\"unclickable\"\r\n            key={generateListKey(\"alias-list\", aliases[i])}\r\n          >\r\n            {aliases[i]}\r\n          </li>\r\n        );\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  handleBackClick = () => {\r\n    const historyObj = this.props.appHistory[1];\r\n    console.log(historyObj);\r\n    \r\n    if(historyObj.domain === \"character\"){\r\n      this.props.backSelectCharacter({id: historyObj.id});\r\n    } else if (historyObj.domain === \"house\"){\r\n      this.props.backSelectHouse({id: historyObj.id});\r\n    }\r\n  }\r\n\r\n  showBackButton = () => {\r\n    return this.props.appHistory.length > 1;\r\n  }\r\n\r\n  render() {\r\n    const name = this.props.character.name\r\n      ? this.props.character.name\r\n      : this.props.character.aliases[0] + \"*\";\r\n    const culture = this.props.character.culture\r\n      ? this.props.character.culture\r\n      : \"\";\r\n    const aliases = this.constructAliases();\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"drill-down-navigation\" >\r\n        {this.showBackButton() ?\r\n            <i className=\"material-icons drill-down-back\" onClick={this.handleBackClick}>\r\n              arrow_back\r\n            </i>\r\n            : ''\r\n          }\r\n          <i className=\"material-icons close-drill-down\" onClick={this.props.closeDrillDown}>close</i>\r\n        </span>\r\n        <div className=\"character-title\">\r\n          <h3 className=\"character-name\" align=\"center\">\r\n            {name}\r\n          </h3>\r\n          <h4 align=\"center\">\r\n            {culture} {this.props.character.gender}{\" \"}\r\n            {culture ? \"\" : \"from unknwon\"}\r\n          </h4>\r\n        </div>\r\n        <div className=\"character-info\">\r\n          <p>\r\n            Born:{\" \"}\r\n            {this.props.character.born ? this.props.character.born : \"unknwon\"}\r\n          </p>\r\n          <p>\r\n            Died:{\" \"}\r\n            {this.props.character.died\r\n              ? this.props.character.died\r\n              : \"alive or unknown\"}{\" \"}\r\n          </p>\r\n          {!!aliases.length\r\n            ? this.props.character.name\r\n              ? \"Aliases: \"\r\n              : \"Other Aliases: \"\r\n            : \"\"}\r\n          <ul>{aliases}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appHistory: state.app.drillDownHistory\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeDrillDown: () => dispatch({type: generalActions.CLOSE_DRILL_DOWN}),\r\n    backSelectCharacter: payload => dispatch({type: characterActions.BACK_SELECT_CHARACTER, payload}),\r\n    backSelectHouse: payload => dispatch({type: houseActions.BACK_SELECT_HOUSE, payload})\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterDrillDown);\r\n","import React from 'react';\r\nimport { generateListKey, getIdFromUrlString } from '../../utils/utils';\r\n\r\nconst SwornMemberList = props => {\r\n  const listName = 'sworn-member'\r\n  const onMemberClick = event => {\r\n    props.onMemberClick(event.currentTarget.value);\r\n  }\r\n  const members = props.members.map(member => {\r\n    const clickable = props.characters[getIdFromUrlString(member.url)];\r\n    const className = clickable ? \"clickable\" : \"unclickable\";\r\n    const id = getIdFromUrlString(member.url);\r\n    return (<li onClick={onMemberClick} className={className} value={id} key={generateListKey(listName, member)}>{member.name ? member.name : (member.aliases[0] + \"*\")}</li>)\r\n});\r\n  return (\r\n    <ul>\r\n      {members}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SwornMemberList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIdFromUrlString } from \"../../utils/utils\";\r\nimport { houseActions, characterActions, generalActions } from \"../../constants/constants\";\r\nimport SwornMemberList from \"./SwornMemberList\";\r\n\r\nclass HouseDrillDown extends Component {\r\n  checkForAndFetchCharacters = () => {\r\n    const overlord = getIdFromUrlString(this.props.house.overlord);\r\n    if (overlord && !this.props.houses[overlord]) {\r\n      this.props.fetchHouse({\r\n        id: getIdFromUrlString(this.props.house.overlord)\r\n      });\r\n    }\r\n    this.props.house.swornMembers.forEach(member => {\r\n      const id = getIdFromUrlString(member);\r\n      if (!this.props.characters[id]) {\r\n        this.props.fetchCharacter({ id });\r\n      }\r\n    });\r\n  };\r\n\r\n  getLordFromCharacters = () => {\r\n    return this.props.characters[\r\n      getIdFromUrlString(this.props.house.currentLord)\r\n    ];\r\n  };\r\n\r\n  selectLord = () => {\r\n    if (this.getLordFromCharacters()) {\r\n      const id = getIdFromUrlString(this.getLordFromCharacters().url);\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  selectOverlord = () => {\r\n    if (this.props.house.overlord) {\r\n      const id = getIdFromUrlString(this.props.house.overlord);\r\n      if (this.props.houses[id]) {\r\n        this.props.selectHouse({ id });\r\n      }\r\n    }\r\n  };\r\n\r\n  showBackButton = () => {\r\n    return this.props.appHistory.length > 1;\r\n  }\r\n\r\n  handleBackClick = () => {\r\n    const historyObj = this.props.appHistory[1];\r\n    if(historyObj.domain === \"character\"){\r\n      this.props.backSelectCharacter({id: historyObj.id});\r\n    } else if (historyObj.domain === \"house\"){\r\n      this.props.backSelectHouse({id: historyObj.id});\r\n    }\r\n  }\r\n\r\n  onMemberClick = id => {\r\n    if (this.props.characters[id]) {\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  isLordLoaded = () => {\r\n    return this.props.currentLord && this.getLordFromCharacters();\r\n  };\r\n\r\n  render() {\r\n    const words = this.props.house.words\r\n      ? '\"' + this.props.house.words + '\"'\r\n      : \"\";\r\n    const lordName = this.isLordLoaded()\r\n      ? this.getLordFromCharacters().name\r\n      : \"unknown\";\r\n    const coatOfArms = this.props.house.coatOfArms\r\n      ? this.props.house.coatOfArms\r\n      : \"unknown\";\r\n    const overlord = this.props.house.overlord\r\n      ? this.props.houses[getIdFromUrlString(this.props.house.overlord)]\r\n      : \"\";\r\n    let overlordName = \"unknown\";\r\n    if (overlord) {\r\n      overlordName = overlord.name;\r\n    }\r\n    const members = this.props.house.swornMembers\r\n      .map(member => getIdFromUrlString(member))\r\n      .filter(id => !!this.props.characters[id])\r\n      .map(id => this.props.characters[id]);\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"drill-down-navigation\" >\r\n          {this.showBackButton() ?\r\n            <i className=\"material-icons drill-down-back\" onClick={this.handleBackClick}>\r\n              arrow_back\r\n            </i>\r\n            : ''\r\n          }\r\n          <i className=\"material-icons close-drill-down\" onClick={this.props.closeDrillDown}>\r\n            close\r\n          </i>\r\n        </span>\r\n        <span className=\"house-title\">\r\n          <h3 className=\"house-name\" align=\"center\">\r\n            {this.props.house.name}\r\n          </h3>\r\n          <h4 className=\"house-words\" align=\"center\">\r\n            {words}\r\n          </h4>\r\n        </span>\r\n        <div className=\"house-info\">\r\n          <p onClick={this.selectLord}>Current Lord: {lordName}</p>\r\n          <p>Coat of Arms: {coatOfArms}</p>\r\n          <p onClick={this.selectOverlord}>Overlord: {overlordName}</p>\r\n        </div>\r\n        Sworn Members:\r\n        {this.props.house.swornMembers.length ? (\r\n          <SwornMemberList\r\n            onMemberClick={this.onMemberClick}\r\n            members={members}\r\n            characters={this.props.characters}\r\n          />\r\n        ) : (\r\n            \" None\"\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    houses: state.houses.list,\r\n    appHistory: state.app.drillDownHistory\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouse: payload =>\r\n      dispatch({ type: houseActions.FETCH_HOUSE_START, payload }),\r\n    selectCharacter: payload =>\r\n      dispatch({ type: characterActions.SELECT_CHARACTER, payload }),\r\n    selectHouse: payload =>\r\n      dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    fetchCharacter: payload =>\r\n      dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    closeDrillDown: () => dispatch({ type: generalActions.CLOSE_DRILL_DOWN }),\r\n    backSelectCharacter: payload => dispatch({type: characterActions.BACK_SELECT_CHARACTER, payload}),\r\n    backSelectHouse: payload => dispatch({type: houseActions.BACK_SELECT_HOUSE, payload})\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseDrillDown);\r\n","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/CharacterContainer'\r\nimport BookContainer from './containers/BookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport './App.scss';\r\nimport HouseContainer from './containers/HouseContainer';\r\nimport CharacterDrillDown from './components/characterStuff/CharacterDrillDown';\r\nimport HouseDrillDown from './components/houseStuff/HouseDrillDown';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: false,\r\n    viewHouses: true\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch (e.target.value) {\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ viewBooks, viewCharacters, viewHouses });\r\n  }\r\n\r\n  render() {\r\n    const isDrillDownOpen = this.props.selectedCharacter || this.props.selectedHouse;    \r\n    return (\r\n      <div className=\"git-app\">\r\n        <div id=\"domain-selector\" align='center'>\r\n          <span>\r\n            <button value='books' onClick={this.changeView} className=\"view-selector-button\">View Books</button>\r\n          </span>\r\n          <span>\r\n            <button value='characters' onClick={this.changeView} className='view-selector-button'>View Characters</button>\r\n          </span>\r\n          <span>\r\n            <button value='houses' onClick={this.changeView} className='view-selector-button'>View Houses</button>\r\n          </span>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewBooks ? (<BookContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.props.selectedCharacter ? (<CharacterDrillDown character={this.props.selectedCharacter} />) : ''}\r\n        {this.props.selectedHouse ? (<HouseDrillDown house={this.props.selectedHouse} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  componentDidUpdate = () => {    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCharacter: state.characters.selectedCharacter,\r\n    selectedHouse: state.houses.selectedHouse\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions, houseActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedCharacter: null\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.map(it => { return { ...it, id: getIdFromUrlString(it.url) } }).forEach(it => newCharacters[it.id] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newCharacters }, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return { ...state, error: null };\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      const newCharacter = action.data.data;\r\n      newCharacter.id = getIdFromUrlString(newCharacter.url);\r\n      const characterList = {...state.list};\r\n      characterList[newCharacter.id] = newCharacter;      \r\n      return { ...state, list: characterList };\r\n    case characterActions.FETCH_CHARACTER_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error }\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case characterActions.SELECT_CHARACTER:\r\n      let selectedCharacter = state.list[action.payload.id];\r\n      return { ...state, selectedCharacter };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case houseActions.SELECT_HOUSE:\r\n      return { ...state, selectedCharacter: null };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      const books = action.data.data.map(book => {return {...book, id: getIdFromUrlString(book.url)}});\r\n      return { ...state, fetching: false, list: books };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import { characterActions, houseActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  drillDownHistory: []\r\n}\r\n\r\nexport function appReducer(state = initialState, action) {\r\n  let drillDownHistory;\r\n  switch (action.type) {\r\n    case characterActions.SELECT_CHARACTER:\r\n      let newCharacterHistory = { domain: \"character\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newCharacterHistory);\r\n      drillDownHistory = drillDownHistory.slice(0, 20);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.SELECT_HOUSE:\r\n      let newHouseHistory = { domain: \"house\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newHouseHistory);\r\n      drillDownHistory = drillDownHistory.slice(0, 20);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.shift();\r\n      return {...state, drillDownHistory};\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function() {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions, characterActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedHouse: null\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n      let newHouses = {};\r\n      action.data.data.map(it => { return { ...it, id: getIdFromUrlString(it.url) } }).forEach(it => newHouses[it.id] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newHouses }, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case houseActions.FETCH_HOUSE_START:\r\n      return { ...state, error: null };\r\n    case houseActions.FETCH_HOUSE_SUCCESS:\r\n      const newHouse = action.data.data;\r\n      newHouse.id = getIdFromUrlString(newHouse.url);\r\n      const houseList = {...state.list};\r\n      houseList[newHouse.id] = newHouse;\r\n      return { ...state, list: houseList };\r\n    case houseActions.FETCH_HOUSE_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case houseActions.SELECT_HOUSE:\r\n      let selectedHouse = state.list[action.payload.id];\r\n      return { ...state, selectedHouse };\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case characterActions.SELECT_CHARACTER:\r\n      return { ...state, selectedHouse: null };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try {\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: houseActions.HOUSES_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* houseFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().houses.fetchOne, action.payload);\r\n    yield put({type: houseActions.FETCH_HOUSE_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: houseActions.FETCH_HOUSE_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* houseSagas() {\r\n  yield all([\r\n    yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses),\r\n    yield takeEvery(houseActions.FETCH_HOUSE_START, houseFetch)\r\n  ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { appReducer } from './reducers/appReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}