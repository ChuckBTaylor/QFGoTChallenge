{"version":3,"sources":["components/general/CallApiButton.js","constants/constants.js","utils/utils.js","containers/CharacterContainer.js","containers/BookContainer.js","containers/HouseContainer.js","components/characterStuff/CharacterDrillDown.js","components/houseStuff/SwornMemberList.js","components/houseStuff/HouseDrillDown.js","GoTApp.js","serviceWorker.js","reducers/characterReducer.js","reducers/bookReducer.js","reducers/appReducer.js","services/apiRequests.js","sagas/characterSagas.js","sagas/bookSagas.js","reducers/houseReducer.js","sagas/houseSagas.js","index.js"],"names":["CallApiButton","props","react_default","a","createElement","className","onClick","buttonName","characterActions","CHARACTERS_FETCH_START","CHARACTERS_FETCH_SUCCESS","CHARACTERS_FETCH_FAILURE","FETCH_CHARACTER_START","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","SELECT_CHARACTER","BACK_SELECT_CHARACTER","generalActions","CLOSE_DRILL_DOWN","bookActions","BOOKS_FETCH_START","BOOKS_FETCH_SUCCESS","BOOKS_FETCH_FAILURE","houseActions","HOUSES_FETCH_START","HOUSES_FETCH_SUCCESS","HOUSES_FETCH_FAILURE","SELECT_HOUSE","FETCH_HOUSE_START","FETCH_HOUSE_SUCCESS","FETCH_HOUSE_FAILURE","BACK_SELECT_HOUSE","isObjectEmpty","obj","length","constructQueryStringFromObj","Object","keys","filter","key","map","join","isStringEmpty","str","undefined","getIdFromUrlString","splitObj","split","generateListKey","listName","listItem","concat","url","commonFilter","row","column","id","toLowerCase","includes","value","commonSort","b","desc","Infinity","startsWith","slice","CharacterContainer","state","pageSize","filterUnknownCulture","getMoreCharacters","_this","fetchCharacters","page","lastPageRequested","getCharacterNameOrAlias","rowInfo","original","aliases","updateCultureFilter","setState","changePageSize","filterCharacterByCulture","it","culture","tdProps","e","handleOriginal","selectCharacter","filterBooksAppearedIn","i","books","bookId","name","createBookList","bookUrl","componentDidMount","componentDidUpdate","_this2","this","domainContainerClassName","isDrillDownOpen","filteredCharacters","values","characters","columns","Header","accessor","Footer","filterable","filterMethod","Cell","gender","type","onChange","checked","react_table_es","data","onPageSizeChange","showFilters","loading","fetchingCharacters","getTdProps","general_CallApiButton","Component","connect","list","fetching","dispatch","payload","BookContainer","bookFilter","updateFilter","target","reformatBookTitle","title","convertApiDateToFriendlyDate","apiDate","Date","toLocaleDateString","showFilter","sorthMethod","date","fetchingBooks","pageSizeOptions","fetchBooks","HouseContainer","houseFilter","getMoreHouses","fetchHouses","reformatHouseTitle","resolveHouseData","houseData","lordId","currentLord","lordName","houseId","selectHouse","characterId","houses","house","forEach","fetchCharacter","sortMethod","region","show","resolveData","fetchingHouses","CharacterDrillDown","constructAliases","character","arr","push","closeDrillDown","align","born","died","SwornMemberList","onMemberClick","event","currentTarget","members","member","HouseDrillDown","checkForAndFetchCharacters","overlord","fetchHouse","swornMembers","getLordFromCharacters","selectLord","selectOverlord","showBackButton","appHistory","handleBackClick","console","log","historyObj","domain","backSelectCharacter","backSelectHouse","isLordLoaded","words","coatOfArms","overlordName","houseStuff_SwornMemberList","app","drillDownHistory","GoTApp","viewBooks","viewCharacters","viewHouses","changeView","selectedCharacter","selectedHouse","containers_CharacterContainer","containers_BookContainer","containers_HouseContainer","characterStuff_CharacterDrillDown","houseStuff_HouseDrillDown","Boolean","window","location","hostname","match","initialState","error","lastPageRequest","apiRequests","API_ROOT","fetchAll","axios","method","fetch","queryString","fetchOne","characterFetch","characterSagas","action","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","bookSagas","bookSagas_marked","bookSagas_marked2","houseFetch","houseSagas","houseSagas_marked","houseSagas_marked2","all","t1","t2","t3","houseSagas_marked3","rootReducer","combineReducers","arguments","objectSpread","newCharacters","newCharacter","newHouses","newHouse","newCharacterHistory","domnain","unshift","newHouseHistory","shift","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_GoTApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddd95d0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CallApiButton = props => {\r\n  const handleClick = () => {\r\n    props.onClick();\r\n    \r\n  }\r\n\r\n  return(\r\n    <button className=\"\" onClick={handleClick}>\r\n      {props.buttonName}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CallApiButton;","export const characterActions = {\r\n  CHARACTERS_FETCH_START: \"CHARACTERS_FETCH_START\",\r\n  CHARACTERS_FETCH_SUCCESS: \"CHARACTER_FETCH_SUCCESS\",\r\n  CHARACTERS_FETCH_FAILURE: \"CHARACTERS_FETCH_FAILURE\",\r\n  FETCH_CHARACTER_START: \"FETCH_CHARACTER_START\",\r\n  FETCH_CHARACTER_SUCCESS: \"FETCH_CHARACTER_SUCCESS\",\r\n  FETCH_CHARACTER_FAILURE: \"FETCH_CHARACTER_FAILURE\",\r\n  SELECT_CHARACTER: \"SELECT_CHARACTER\",\r\n  BACK_SELECT_CHARACTER: \"BACK_SELECT_CHARACTER\"\r\n};\r\n\r\nexport const generalActions = {\r\n  CLOSE_DRILL_DOWN: \"CLOSE_DRILL_DOWN\"\r\n};\r\n\r\nexport const bookActions = {\r\n  BOOKS_FETCH_START: \"BOOKS_FETCH_START\",\r\n  BOOKS_FETCH_SUCCESS: \"BOOKS_FETCH_SUCCESS\",\r\n  BOOKS_FETCH_FAILURE: \"BOOKS_FETCH_FAILURE\"\r\n};\r\n\r\nexport const houseActions = {\r\n  HOUSES_FETCH_START: \"HOUSES_FETCH_START\",\r\n  HOUSES_FETCH_SUCCESS: \"HOUSES_FETCH_SUCCESS\",\r\n  HOUSES_FETCH_FAILURE: \"HOUSES_FETCH_FAILURE\",\r\n  SELECT_HOUSE: \"SELECT_HOUSE\",\r\n  FETCH_HOUSE_START: \"FETCH_HOUSE\",\r\n  FETCH_HOUSE_SUCCESS: \"FETCH_HOUSE_SUCCESS\",\r\n  FETCH_HOUSE_FAILURE: \"FETCH_HOUSE_FAILURE\",\r\n  BACK_SELECT_HOUSE: \"BACK_SELECT_HOUSE\"\r\n};\r\n\r\n","export function isObjectEmpty(obj) {\r\n  if (obj == null) return true;\r\n  if (obj.length === 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function constructQueryStringFromObj(obj) {\r\n  return Object.keys(obj).filter(key => key !== 'id').map(key => key + \"=\" + obj[key]).join('&');\r\n}\r\n\r\nexport function isStringEmpty(str) {\r\n  return (str === undefined || str === null || str === '');\r\n}\r\n\r\nexport function getIdFromUrlString(str) {\r\n  let splitObj = str.split('/');\r\n  return +splitObj[splitObj.length - 1];\r\n}\r\n\r\nexport function generateListKey(listName, listItem) {\r\n  if (typeof listItem === 'string') {\r\n    return `${listName}-${listItem}`;\r\n  } else {\r\n    return `${listName}-${getIdFromUrlString(listItem.url)}`;\r\n  }\r\n}\r\n\r\nexport function commonFilter(filter, row, column) {\r\n  if (!row[column.id])\r\n    return false;\r\n  return row[column.id].toLowerCase().includes(filter.value.toLowerCase());\r\n}\r\n\r\nexport function commonSort(a, b, desc) {\r\n  a = a === null || a === undefined ? -Infinity : a;\r\n  b = b === null || b === undefined ? -Infinity : b;\r\n  if (typeof a === \"string\") {\r\n    a = a.toLowerCase();\r\n    if (a.startsWith(\"the \"))\r\n      a = a.slice(4);\r\n    else if (a.startsWith(\"a \"))\r\n      a = a.slice(2);\r\n  }\r\n  if (typeof b === \"string\") {\r\n    b = b.toLowerCase();\r\n    if (b.startsWith(\"the \"))\r\n      b = b.slice(4);\r\n    else if (b.startsWith(\"a \"))\r\n      b = b.slice(2);\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};","import React, { Component } from \"react\";\r\nimport CallApiButton from \"../components/general/CallApiButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { isStringEmpty, commonFilter, getIdFromUrlString, generateListKey } from \"../utils/utils\";\r\n\r\nclass CharacterContainer extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    filterUnknownCulture: false\r\n  };\r\n\r\n  getMoreCharacters = () => {\r\n    this.props.fetchCharacters({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  getCharacterNameOrAlias = rowInfo => {\r\n    if(rowInfo.value)\r\n      return rowInfo.value;\r\n    return rowInfo.original.aliases[0]+\"*\";\r\n  }\r\n\r\n  updateCultureFilter = () => {\r\n    this.setState({ filterUnknownCulture: !this.state.filterUnknownCulture });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  filterCharacterByCulture = it => {\r\n    if (!this.state.filterUnknownCulture)\r\n      return true;\r\n    if (isStringEmpty(it.culture)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if (column.id === \"characterName\") {\r\n          let id = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectCharacter({ id });\r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  filterBooksAppearedIn = (filter, row) => {\r\n    for (let i = 0; i < row.books.length; i++) {\r\n      let bookId = getIdFromUrlString(row.books[i]);\r\n      if (this.props.books[bookId]) {\r\n        if (this.props.books[bookId].name.toLowerCase().includes(filter.value.toLowerCase()))\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createBookList = rowInfo => {\r\n    return rowInfo.row.books.map(bookUrl => getIdFromUrlString(bookUrl)).filter(bookId => !!this.props.books[bookId]).map(bookId => (<li className=\"unclickable\" key={generateListKey('books-appeared-in-table', `${bookId}`)}>{this.props.books[bookId].name}</li>));\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const filteredCharacters = Object.values(this.props.characters).filter(it => this.filterCharacterByCulture(it));\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      id: 'characterName',\r\n      Footer: \"*alias\",\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Cell: name => (<span>{this.getCharacterNameOrAlias(name)}</span>)\r\n    }, {\r\n      Header: \"Gender\",\r\n      accessor: 'gender',\r\n      filterable: true,\r\n      filterMethod: (filter, row) => row.gender.toLowerCase().startsWith(filter.value.toLowerCase())\r\n    }, {\r\n      Header: \"Culture\",\r\n      accessor: 'culture',\r\n      id: 'culture',\r\n      Cell: (culture => <span>{!isStringEmpty(culture.value) ? culture.value : \"unknown\"}</span>),\r\n      filterable: true,\r\n      filterMethod: commonFilter,\r\n      Footer: <span>Filter Unknown: <input type='checkbox' onChange={this.updateCultureFilter} checked={this.state.filterUnknownCulture} /></span>\r\n    }, {\r\n      Header: \"Books Appeared In\",\r\n      accessor: \"books\",\r\n      Cell: books => (<span><ul className='in-table-list'>{this.createBookList(books)}</ul></span>),\r\n      filterable: true,\r\n      filterMethod: this.filterBooksAppearedIn\r\n    }]\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={filteredCharacters}\r\n            columns={columns}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            showFilters={true}\r\n            loading={this.props.fetchingCharacters}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className=\"api-button\">\r\n          <CallApiButton\r\n            onClick={this.getMoreCharacters}\r\n            buttonName={\"Get More Characters\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchCharacters({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    lastPageRequested: state.characters.lastPageRequested,\r\n    fetchingCharacters: state.characters.fetching,\r\n    books: state.books.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCharacters: payload =>\r\n      dispatch({ type: characterActions.CHARACTERS_FETCH_START, payload }),\r\n    selectCharacter: payload => dispatch({ type: characterActions.SELECT_CHARACTER, payload })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharacterContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { bookActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, commonSort } from \"../utils/utils\";\r\n\r\nclass BookContainer extends Component {\r\n\r\n  state = {\r\n    bookFilter: \"\",\r\n    pageSize: 15\r\n  }\r\n\r\n  updateFilter = e => {\r\n    this.setState({ bookFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatBookTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = (apiDate) => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"name\",\r\n        showFilter: true,\r\n        id: \"bookTitle\",\r\n        Cell: (title => <span className='book-title'>{this.reformatBookTitle(title.value)}</span>),\r\n        filterMethod: commonFilter,\r\n        sorthMethod: commonSort\r\n      },\r\n      {\r\n        Header: \"Number of Pages\",\r\n        accessor: \"numberOfPages\",\r\n        id: \"numberOfPages\",\r\n        filterable: false\r\n      },\r\n      {\r\n        Header: \"Release Date\",\r\n        accessor: 'released',\r\n        Cell: (date => <span className='book release-date'>{this.convertApiDateToFriendlyDate(date.value)}</span>),\r\n        filterable: true\r\n      }\r\n    ];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.books)}\r\n            columns={columns}\r\n            loading={this.props.fetchingBooks}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            pageSizeOptions={[5, 10, 15]}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      bookFilter: ''\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books.list,\r\n    fetchingBooks: state.books.fetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BookContainer);\r\n","import React, { Component } from \"react\";\r\nimport 'react-table/react-table.css';\r\nimport { connect } from \"react-redux\";\r\nimport { houseActions, characterActions } from \"../constants/constants\";\r\nimport ReactTable from \"react-table\";\r\nimport { commonFilter, getIdFromUrlString, commonSort } from \"../utils/utils\";\r\nimport CallApiButton from '../components/general/CallApiButton';\r\n\r\nclass HouseContainer extends Component {\r\n\r\n  state = {\r\n    houseFilter: \"\",\r\n    pageSize: 20\r\n  }\r\n\r\n  getMoreHouses = () => {\r\n    this.props.fetchHouses({ page: (+this.props.lastPageRequested + 1) });\r\n  };\r\n\r\n  updateFilter = e => {\r\n    this.setState({ houseFilter: e.target.value });\r\n  }\r\n\r\n  changePageSize = pageSize => {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  reformatHouseTitle = title => {\r\n    if (title.startsWith(\"The\")) {\r\n      return title.slice(4).concat(\", The\");\r\n    } else if (title.startsWith(\"A\")) {\r\n      return title.slice(2).concat(\", A\");\r\n    }\r\n    return title;\r\n  };\r\n\r\n  convertApiDateToFriendlyDate = apiDate => {\r\n    let date = new Date(apiDate);\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  resolveHouseData = houseData => {\r\n    let lordId = getIdFromUrlString(houseData.currentLord);\r\n    if (this.props.characters[lordId])\r\n      houseData.lordName = this.props.characters[lordId].name;\r\n    return houseData;\r\n  }\r\n\r\n  tdProps = (state, rowInfo, column) => {\r\n    return {\r\n      onClick: (e, handleOriginal) => {\r\n        if(column.id === \"name\"){\r\n          let houseId = getIdFromUrlString(rowInfo.original.url);\r\n          this.props.selectHouse({id: houseId});\r\n        } else if (column.id === \"lordName\"){\r\n          if(rowInfo.row.lordName){            \r\n            let characterId = getIdFromUrlString(rowInfo.row.currentLord);\r\n            this.props.selectCharacter({id: characterId})\r\n          }          \r\n        }\r\n        if (handleOriginal) {\r\n          handleOriginal();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const domainContainerClassName = \"domain-container \" + (this.props.isDrillDownOpen ? \"drill-down-open\" : \"drill-down-closed\");\r\n    const columns = [{\r\n      Header: \"Name\",\r\n      accessor: 'name',\r\n      filterMethod: commonFilter\r\n    }, {\r\n      Header: \"Region\",\r\n      accessor: 'region',\r\n      filterMethod: commonFilter,\r\n      sortMethod: commonSort,\r\n      Cell: region => (<span>{region.value ? region.value : 'Region unknown'}</span>)\r\n    }, {\r\n      Header: \"Current Lord Id\",\r\n      accessor: 'currentLord',\r\n      filterable: false,\r\n      show: false\r\n    }, {\r\n      Header: \"Current Lord\",\r\n      accessor: 'lordName',\r\n      filterable: true,\r\n      Cell: lordName => (<span>{lordName.value ? lordName.value : \"Name unknown\"}</span>),\r\n      filterMethod: commonFilter\r\n    }];\r\n    return (\r\n      <div className={domainContainerClassName}>\r\n        <span className=\"table-span\">\r\n          <ReactTable\r\n            data={Object.values(this.props.houses)}\r\n            resolveData={data => data.map(this.resolveHouseData)}\r\n            columns={columns}\r\n            loading={this.props.fetchingHouses}\r\n            showFilters={true}\r\n            filterable={true}\r\n            pageSize={this.state.pageSize}\r\n            onPageSizeChange={this.changePageSize}\r\n            getTdProps={this.tdProps}\r\n          />\r\n        </span>\r\n        <div className='api-button'>\r\n          <CallApiButton\r\n            onClick={this.getMoreHouses}\r\n            buttonName={\"Get More Houses\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = () => {\r\n    if (this.props.lastPageRequested < 1)\r\n      this.props.fetchHouses({ page: 1 });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    Object.values(this.props.houses).filter(house => house.currentLord && !house.lordName).forEach(house => this.props.fetchCharacter({ id: getIdFromUrlString(house.currentLord) }));\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    houses: state.houses.list,\r\n    lastPageRequested: state.houses.lastPageRequested,\r\n    fetchingHouses: state.houses.fetching,\r\n    characters: state.characters.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouses: payload => dispatch({ type: houseActions.HOUSES_FETCH_START, payload }),\r\n    fetchCharacter: payload => dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    selectHouse: payload => dispatch({type: houseActions.SELECT_HOUSE, payload}),\r\n    selectCharacter: payload => dispatch({type: characterActions.SELECT_CHARACTER, payload})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { generateListKey } from \"../../utils/utils\";\r\nimport { generalActions } from \"../../constants/constants\";\r\n\r\nclass CharacterDrillDown extends Component {\r\n  constructAliases = () => {\r\n    let aliases = this.props.character.aliases;\r\n    let i = this.props.character.name ? 0 : 1;\r\n    let arr = [];\r\n    for (i; i < aliases.length; i++) {\r\n      if (!!aliases[i])\r\n        arr.push(\r\n          <li\r\n            className=\"unclickable\"\r\n            key={generateListKey(\"alias-list\", aliases[i])}\r\n          >\r\n            {aliases[i]}\r\n          </li>\r\n        );\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  render() {\r\n    const name = this.props.character.name\r\n      ? this.props.character.name\r\n      : this.props.character.aliases[0] + \"*\";\r\n    const culture = this.props.character.culture\r\n      ? this.props.character.culture\r\n      : \"\";\r\n    const aliases = this.constructAliases();\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"close-drill-down\" onClick={this.props.closeDrillDown}>\r\n          <i className=\"material-icons close-drill-down\">close</i>\r\n        </span>\r\n        <div className=\"character-title\">\r\n          <h3 className=\"character-name\" align=\"center\">\r\n            {name}\r\n          </h3>\r\n          <h4 align=\"center\">\r\n            {culture} {this.props.character.gender}{\" \"}\r\n            {culture ? \"\" : \"from unknwon\"}\r\n          </h4>\r\n        </div>\r\n        <div className=\"character-info\">\r\n          <p>\r\n            Born:{\" \"}\r\n            {this.props.character.born ? this.props.character.born : \"unknwon\"}\r\n          </p>\r\n          <p>\r\n            Died:{\" \"}\r\n            {this.props.character.died\r\n              ? this.props.character.died\r\n              : \"alive or unknown\"}{\" \"}\r\n          </p>\r\n          {!!aliases.length\r\n            ? this.props.character.name\r\n              ? \"Aliases: \"\r\n              : \"Other Aliases: \"\r\n            : \"\"}\r\n          <ul>{aliases}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeDrillDown: () => dispatch({type: generalActions.CLOSE_DRILL_DOWN})\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CharacterDrillDown);\r\n","import React from 'react';\r\nimport { generateListKey, getIdFromUrlString } from '../../utils/utils';\r\n\r\nconst SwornMemberList = props => {\r\n  const listName = 'sworn-member'\r\n  const onMemberClick = event => {\r\n    props.onMemberClick(event.currentTarget.value);\r\n  }\r\n  const members = props.members.map(member => {\r\n    const clickable = props.characters[getIdFromUrlString(member.url)];\r\n    const className = clickable ? \"clickable\" : \"unclickable\";\r\n    const id = getIdFromUrlString(member.url);\r\n    return (<li onClick={onMemberClick} className={className} value={id} key={generateListKey(listName, member)}>{member.name ? member.name : (member.aliases[0] + \"*\")}</li>)\r\n});\r\n  return (\r\n    <ul>\r\n      {members}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SwornMemberList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIdFromUrlString } from \"../../utils/utils\";\r\nimport { houseActions, characterActions, generalActions } from \"../../constants/constants\";\r\nimport SwornMemberList from \"./SwornMemberList\";\r\n\r\nclass HouseDrillDown extends Component {\r\n  checkForAndFetchCharacters = () => {\r\n    const overlord = getIdFromUrlString(this.props.house.overlord);\r\n    if (overlord && !this.props.houses[overlord]) {\r\n      this.props.fetchHouse({\r\n        id: getIdFromUrlString(this.props.house.overlord)\r\n      });\r\n    }\r\n    this.props.house.swornMembers.forEach(member => {\r\n      const id = getIdFromUrlString(member);\r\n      if (!this.props.characters[id]) {\r\n        this.props.fetchCharacter({ id });\r\n      }\r\n    });\r\n  };\r\n\r\n  getLordFromCharacters = () => {\r\n    return this.props.characters[\r\n      getIdFromUrlString(this.props.house.currentLord)\r\n    ];\r\n  };\r\n\r\n  selectLord = () => {\r\n    if (this.getLordFromCharacters()) {\r\n      const id = getIdFromUrlString(this.getLordFromCharacters().url);\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  selectOverlord = () => {\r\n    if (this.props.house.overlord) {\r\n      const id = getIdFromUrlString(this.props.house.overlord);\r\n      if (this.props.houses[id]) {\r\n        this.props.selectHouse({ id });\r\n      }\r\n    }\r\n  };\r\n\r\n  showBackButton = () => {\r\n    return this.props.appHistory.length > 1;\r\n  }\r\n\r\n  handleBackClick = () => {\r\n    console.log(\"clicked\");\r\n    \r\n    const historyObj = this.props.appHistory[1];\r\n    if(historyObj.domain === \"character\"){\r\n      this.props.backSelectCharacter(historyObj.id);\r\n    } else if (historyObj.domain === \"house\"){\r\n      this.props.backSelectHouse(historyObj.id);\r\n    }\r\n  }\r\n\r\n  onMemberClick = id => {\r\n    if (this.props.characters[id]) {\r\n      this.props.selectCharacter({ id });\r\n    }\r\n  };\r\n\r\n  isLordLoaded = () => {\r\n    return this.props.currentLord && this.getLordFromCharacters();\r\n  };\r\n\r\n  render() {\r\n    const words = this.props.house.words\r\n      ? '\"' + this.props.house.words + '\"'\r\n      : \"\";\r\n    const lordName = this.isLordLoaded()\r\n      ? this.getLordFromCharacters().name\r\n      : \"unknown\";\r\n    const coatOfArms = this.props.house.coatOfArms\r\n      ? this.props.house.coatOfArms\r\n      : \"unknown\";\r\n    const overlord = this.props.house.overlord\r\n      ? this.props.houses[getIdFromUrlString(this.props.house.overlord)]\r\n      : \"\";\r\n    let overlordName = \"unknown\";\r\n    if (overlord) {\r\n      overlordName = overlord.name;\r\n    }\r\n    const members = this.props.house.swornMembers\r\n      .map(member => getIdFromUrlString(member))\r\n      .filter(id => !!this.props.characters[id])\r\n      .map(id => this.props.characters[id]);\r\n    return (\r\n      <div className=\"drill-down\">\r\n        <span className=\"drill-down-navigation\" >\r\n          {this.showBackButton() ?\r\n            <i className=\"material-icons drill-down-back\" onClick={this.handleBackClick}>\r\n              arrow_back\r\n            </i>\r\n            : ''\r\n          }\r\n          <i className=\"material-icons close-drill-down\" onClick={this.props.closeDrillDown}>\r\n            close\r\n          </i>\r\n        </span>\r\n        <span className=\"house-title\">\r\n          <h3 className=\"house-name\" align=\"center\">\r\n            {this.props.house.name}\r\n          </h3>\r\n          <h4 className=\"house-words\" align=\"center\">\r\n            {words}\r\n          </h4>\r\n        </span>\r\n        <div className=\"house-info\">\r\n          <p onClick={this.selectLord}>Current Lord: {lordName}</p>\r\n          <p>Coat of Arms: {coatOfArms}</p>\r\n          <p onClick={this.selectOverlord}>Overlord: {overlordName}</p>\r\n        </div>\r\n        Sworn Members:\r\n        {this.props.house.swornMembers.length ? (\r\n          <SwornMemberList\r\n            onMemberClick={this.onMemberClick}\r\n            members={members}\r\n            characters={this.props.characters}\r\n          />\r\n        ) : (\r\n            \" None\"\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.checkForAndFetchCharacters();\r\n    console.log(this.props.appHistory);\r\n\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.checkForAndFetchCharacters();\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    characters: state.characters.list,\r\n    houses: state.houses.list,\r\n    appHistory: state.app.drillDownHistory\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchHouse: payload =>\r\n      dispatch({ type: houseActions.FETCH_HOUSE_START, payload }),\r\n    selectCharacter: payload =>\r\n      dispatch({ type: characterActions.SELECT_CHARACTER, payload }),\r\n    selectHouse: payload =>\r\n      dispatch({ type: houseActions.SELECT_HOUSE, payload }),\r\n    fetchCharacter: payload =>\r\n      dispatch({ type: characterActions.FETCH_CHARACTER_START, payload }),\r\n    closeDrillDown: () => dispatch({ type: generalActions.CLOSE_DRILL_DOWN }),\r\n    backSelectCharacter: payload => dispatch({type: characterActions.BACK_SELECT_CHARACTER, payload}),\r\n    backSelectHouse: payload => dispatch({type: houseActions.BACK_SELECT_HOUSE, payload})\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HouseDrillDown);\r\n","import React, { Component } from 'react';\r\nimport CharacterContainer from './containers/CharacterContainer'\r\nimport BookContainer from './containers/BookContainer';\r\nimport { bookActions } from './constants/constants';\r\nimport { connect } from \"react-redux\";\r\nimport './App.scss';\r\nimport HouseContainer from './containers/HouseContainer';\r\nimport CharacterDrillDown from './components/characterStuff/CharacterDrillDown';\r\nimport HouseDrillDown from './components/houseStuff/HouseDrillDown';\r\n\r\nclass GoTApp extends Component {\r\n\r\n  state = {\r\n    viewBooks: false,\r\n    viewCharacters: false,\r\n    viewHouses: true\r\n  };\r\n\r\n  changeView = e => {\r\n    let viewBooks = false, viewCharacters = false, viewHouses = false;\r\n    switch (e.target.value) {\r\n      case 'books':\r\n        viewBooks = true;\r\n        break;\r\n      case 'characters':\r\n        viewCharacters = true;\r\n        break;\r\n      case 'houses':\r\n        viewHouses = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ viewBooks, viewCharacters, viewHouses });\r\n  }\r\n\r\n  render() {\r\n    const isDrillDownOpen = this.props.selectedCharacter || this.props.selectedHouse;    \r\n    return (\r\n      <div className=\"git-app\">\r\n        <div id=\"domain-selector\" align='center'>\r\n          <span>\r\n            <button value='books' onClick={this.changeView} className=\"view-selector-button\">View Books</button>\r\n          </span>\r\n          <span>\r\n            <button value='characters' onClick={this.changeView} className='view-selector-button'>View Characters</button>\r\n          </span>\r\n          <span>\r\n            <button value='houses' onClick={this.changeView} className='view-selector-button'>View Houses</button>\r\n          </span>\r\n        </div>\r\n        {this.state.viewCharacters ? (<CharacterContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewBooks ? (<BookContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.state.viewHouses ? (<HouseContainer isDrillDownOpen={isDrillDownOpen}/>) : ''}\r\n        {this.props.selectedCharacter ? (<CharacterDrillDown character={this.props.selectedCharacter} />) : ''}\r\n        {this.props.selectedHouse ? (<HouseDrillDown house={this.props.selectedHouse} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  componentDidUpdate = () => {    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedCharacter: state.characters.selectedCharacter,\r\n    selectedHouse: state.houses.selectedHouse\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: () => dispatch({ type: bookActions.BOOKS_FETCH_START })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoTApp);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { characterActions, houseActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedCharacter: null\r\n};\r\n\r\nexport function characterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case characterActions.CHARACTERS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case characterActions.CHARACTERS_FETCH_SUCCESS:\r\n      let newCharacters = {};\r\n      action.data.data.forEach(it => newCharacters[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newCharacters }, lastPageRequested: action.lastPageRequested };\r\n    case characterActions.CHARACTERS_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case characterActions.FETCH_CHARACTER_START:\r\n      return { ...state, error: null };\r\n    case characterActions.FETCH_CHARACTER_SUCCESS:\r\n      let newCharacter = {};\r\n      newCharacter[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newCharacter } };\r\n    case characterActions.FETCH_CHARACTER_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error }\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case characterActions.SELECT_CHARACTER:\r\n      let selectedCharacter = state.list[action.payload.id];\r\n      return { ...state, selectedCharacter };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case houseActions.SELECT_HOUSE:\r\n      return { ...state, selectedCharacter: null };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { bookActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequest: 0\r\n};\r\n\r\nexport function bookReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case bookActions.BOOKS_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case bookActions.BOOKS_FETCH_SUCCESS:\r\n      return { ...state, fetching: false, list: action.data.data };\r\n    case bookActions.BOOKS_FETCH_FAILURE:\r\n      return { ...state, fetching: false, error: action.error };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from book reducer.\");\r\n      return state;\r\n  }\r\n}","import { characterActions, houseActions } from \"../constants/constants\";\r\n\r\nconst initialState = {\r\n  drillDownHistory: []\r\n}\r\n\r\nexport function appReducer(state = initialState, action) {\r\n  let drillDownHistory;\r\n  switch (action.type) {\r\n    case characterActions.SELECT_CHARACTER:\r\n      let newCharacterHistory = { domnain: \"character\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newCharacterHistory);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.SELECT_HOUSE:\r\n      let newHouseHistory = { domnain: \"house\", id: action.payload.id }\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.unshift(newHouseHistory);\r\n      return { ...state, drillDownHistory };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n      drillDownHistory = state.drillDownHistory;\r\n      drillDownHistory.shift();\r\n      return {...state, drillDownHistory};\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport { isObjectEmpty, constructQueryStringFromObj } from \"../utils/utils\";\r\n\r\nexport default function() {\r\n  const API_ROOT = \"https://www.anapioficeandfire.com/api\";\r\n  return {\r\n    books: {\r\n      fetchAll: () => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/books?pageSize=20\";\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    characters: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/characters/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    },\r\n\r\n    houses: {\r\n      fetch: payload => {\r\n        let queryString = !isObjectEmpty(payload)\r\n          ? \"?\" + constructQueryStringFromObj(payload)\r\n          : \"\";\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses\" + queryString;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      },\r\n      fetchOne: payload => {\r\n        let method = \"get\";\r\n        let url = API_ROOT + \"/houses/\" + payload.id;\r\n        return axios({\r\n          method,\r\n          url\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","import apiRequests from '../services/apiRequests';\r\nimport { characterActions } from '../constants/constants';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* fetchCharacters(action) {\r\n  try {\r\n    const data = yield call(apiRequests().characters.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: characterActions.CHARACTERS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* characterFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().characters.fetchOne, action.payload);\r\n    yield put({type: characterActions.FETCH_CHARACTER_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: characterActions.FETCH_CHARACTER_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* characterSagas() {\r\n  yield takeEvery(characterActions.CHARACTERS_FETCH_START, fetchCharacters);\r\n  yield takeEvery(characterActions.FETCH_CHARACTER_START, characterFetch);\r\n}","import { bookActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchBooks() {  \r\n  try {\r\n    const data = yield call(apiRequests().books.fetchAll);\r\n    yield put({ type: bookActions.BOOKS_FETCH_SUCCESS, data });\r\n  } catch (error) {\r\n    yield put({ type: bookActions.BOOKS_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nexport function* bookSagas() {\r\n  yield takeEvery(bookActions.BOOKS_FETCH_START, fetchBooks);\r\n}\r\n","import { houseActions, characterActions, generalActions } from \"../constants/constants\";\r\nimport { getIdFromUrlString } from \"../utils/utils\";\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  list: {},\r\n  error: null,\r\n  lastPageRequested: 0,\r\n  selectedHouse: null\r\n};\r\n\r\nexport function houseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case houseActions.HOUSES_FETCH_START:\r\n      return { ...state, fetching: true, error: null };\r\n    case houseActions.HOUSES_FETCH_SUCCESS:\r\n      let newHouses = {};\r\n      action.data.data.forEach(it => newHouses[getIdFromUrlString(it.url)] = it);\r\n      return { ...state, fetching: false, list: { ...state.list, ...newHouses }, lastPageRequested: action.lastPageRequested };\r\n    case houseActions.HOUSES_FETCH_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, fetching: false, error: action.error };\r\n    case houseActions.FETCH_HOUSE_START:\r\n      return { ...state, error: null };\r\n    case houseActions.FETCH_HOUSE_SUCCESS:\r\n      let newHouse = {};\r\n      newHouse[getIdFromUrlString(action.data.data.url)] = action.data.data;\r\n      return { ...state, list: { ...state.list, ...newHouse } };\r\n    case houseActions.FETCH_HOUSE_FAILURE:\r\n      console.log(action.error);\r\n      return { ...state, error: action.error };\r\n    case houseActions.BACK_SELECT_HOUSE:\r\n    case houseActions.SELECT_HOUSE:\r\n      let selectedHouse = state.list[action.payload.id];\r\n      return { ...state, selectedHouse };\r\n    case characterActions.BACK_SELECT_CHARACTER:\r\n    case generalActions.CLOSE_DRILL_DOWN:\r\n    case characterActions.SELECT_CHARACTER:\r\n      return { ...state, selectedHouse: null };\r\n    default:\r\n      // console.log(\"Failed to match action \" + action.type + \" from house reducer.\");\r\n      return state;\r\n  }\r\n}","import { houseActions } from \"../constants/constants\";\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport apiRequests from \"../services/apiRequests\";\r\n\r\nfunction* fetchHouses(action) {\r\n  try {\r\n    const data = yield call(apiRequests().houses.fetch, action.payload);\r\n    const lastPageRequested = action.payload.page;\r\n    yield put({ type: houseActions.HOUSES_FETCH_SUCCESS, data, lastPageRequested });\r\n  } catch (error) {\r\n    yield put({ type: houseActions.HOUSES_FETCH_FAILURE, error });\r\n  }\r\n}\r\n\r\nfunction* houseFetch(action) {\r\n  try {    \r\n    const data = yield call(apiRequests().houses.fetchOne, action.payload);\r\n    yield put({type: houseActions.FETCH_HOUSE_SUCCESS, data});\r\n  } catch (error) {\r\n    yield put({type: houseActions.FETCH_HOUSE_FAILURE, error})\r\n  }\r\n}\r\n\r\nexport function* houseSagas() {\r\n  yield all([\r\n    yield takeEvery(houseActions.HOUSES_FETCH_START, fetchHouses),\r\n    yield takeEvery(houseActions.FETCH_HOUSE_START, houseFetch)\r\n  ]);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoTApp from './GoTApp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { characterReducer } from './reducers/characterReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { bookReducer } from './reducers/bookReducer';\r\nimport { appReducer } from './reducers/appReducer';\r\nimport { characterSagas } from './sagas/characterSagas';\r\nimport { bookSagas } from './sagas/bookSagas';\r\nimport { houseReducer } from './reducers/houseReducer';\r\nimport { houseSagas } from './sagas/houseSagas';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characterReducer,\r\n  books: bookReducer,\r\n  houses: houseReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(bookSagas);\r\nsagaMiddleware.run(characterSagas);\r\nsagaMiddleware.run(houseSagas);\r\nReactDOM.render(\r\n  <Provider store={store}><GoTApp /></Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}